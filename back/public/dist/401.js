(self.webpackChunksleact_ts_front=self.webpackChunksleact_ts_front||[]).push([[401],{6496:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>se});var a=n(8517);const r=(0,a.Z)("div",{target:"eus8aqr0"})({name:"lwth7x",styles:"position:fixed;top:0;right:0;left:0;bottom:0;z-index:1000;& > div{position:absolute;display:inline-block;--saf-0:rgba(var(--sk_foreground_low,29,28,29),0.13);box-shadow:0 0 0 1px var(--saf-0),0 4px 12px 0 rgba(0,0,0,0.12);background-color:rgba(var(--sk_foreground_min_solid,248,248,248),1);border-radius:6px;user-select:none;min-width:360px;z-index:512;max-height:calc(100vh - 20px);color:rgb(29,28,29);}"}),l=(0,a.Z)("button",{target:"eus8aqr1"})({name:"87xlfi",styles:"position:absolute;right:10px;top:6px;background:transparent;border:none;font-size:30px;cursor:pointer;"});var o=n(7294);const i=({closeButton:e,style:t,show:n,children:a,onCloseModal:i})=>{const c=(0,o.useCallback)((e=>{e.stopPropagation()}),[]);return n?o.createElement(r,{onClick:i},o.createElement("div",{onClick:c,style:t},e&&o.createElement(l,{onClick:i},"×"),a)):null};i.defaultProps={closeButton:!0};const c=i,s=(0,a.Z)("div",{target:"e1q3ybao0"})({name:"1ol8hdt",styles:"position:fixed;text-align:center;left:0;bottom:0;top:0;right:0;z-index:1022;& > div{margin-top:200px;display:inline-block;width:440px;background:white;--saf-0:rgba(var(--sk_foreground_low,29,28,29),0.13);box-shadow:0 0 0 1px var(--saf-0),0 4px 12px 0 rgba(0,0,0,0.12);background-color:rgba(var(--sk_foreground_min_solid,248,248,248),1);border-radius:6px;user-select:none;max-width:440px;padding:30px 40px 0;z-index:1012;position:relative;}"}),p=(0,a.Z)("button",{target:"e1q3ybao1"})({name:"87xlfi",styles:"position:absolute;right:10px;top:6px;background:transparent;border:none;font-size:30px;cursor:pointer;"}),d=({show:e,children:t,onCloseModal:n})=>{const a=(0,o.useCallback)((e=>{e.stopPropagation()}),[]);return e?o.createElement(s,{onClick:n},o.createElement("div",{onClick:a},o.createElement(p,{onClick:n},"×"),t)):null};var m=n(8678),u=n(1039);const g=(0,a.Z)("div",{target:"e298qi10"})({name:"136i1lu",styles:"display:flex;width:100%;padding:20px;padding-top:0;"}),h=(0,a.Z)("form",{target:"e298qi11"})({name:"1128hi6",styles:"color:rgb(29,28,29);font-size:15px;width:100%;border-radius:4px;border:1px solid rgb(29,28,29);"}),b=(0,a.Z)(u.r,{target:"e298qi12"})({name:"1dg1eas",styles:"width:100%;border:none;font-family:Slack-Lato,appleLogo,sans-serif;font-size:15px;padding:9px 10px;background:white;border-radius:4px;& textarea{height:44px;padding:9px 10px !important;outline:none !important;border-radius:4px !important;resize:none !important;line-height:22px;border:none;}& ul{left:20px;top:5px;}"}),x=(0,a.Z)("div",{target:"e298qi13"})({name:"10ldyej",styles:"position:relative;background:rgb(248,248,248);height:41px;display:flex;border-top:1px solid rgb(221,221,221);align-items:center;border-radius:4px;"}),f=(0,a.Z)("button",{target:"e298qi14"})({name:"b9l5gg",styles:"position:absolute;right:5px;top:5px;"}),k=(0,a.Z)("button",{target:"e298qi15"})("padding:4px 0;padding-left:8px;background:transparent;border:none;display:flex;align-items:center;color:rgb(28,29,28);width:100%;& img{margin-right:5px;}",(({focus:e})=>e&&"\n    background: #1264a3;\n    color: white;\n  "),";&:hover{background:#1264a3;color:white;}");var E=n(9367),y=n.n(E),w=n(6182),v=n.n(w);const _=({onSubmitForm:e,chat:t,onChangeChat:n,placeholder:a,data:r})=>{(0,o.useEffect)((()=>{y()(document.querySelector("#editor-chat"))}),[t]);const l=(0,o.useCallback)((t=>{"Enter"===t.key&&(t.shiftKey||(t.preventDefault(),e(t)))}),[t]),i=(0,o.useCallback)(((e,t,n,a,l)=>r?o.createElement(k,{focus:l},o.createElement("img",{src:v().url(r[a].email,{s:"20px"}),alt:r[a].nickname}),o.createElement("span",null,r[a].nickname)):null),[r]);return o.createElement(g,null,o.createElement(h,{onSubmit:e},o.createElement(b,{id:"editor-chat",value:t,onChange:n,onKeyDown:l,placeholder:a},o.createElement(u.p,{appendSpaceOnAdd:!0,style:{background:"rgba(29, 155, 209, .1)",color:"rgb(18, 100, 163)"},trigger:"@",data:r?.map((e=>({id:e.id,display:e.nickname})))||[],renderSuggestion:i})),o.createElement(x,null,o.createElement(f,{className:"c-button-unstyled c-icon_button c-icon_button--light c-icon_button--size_medium c-texty_input__button c-texty_input__button--send"+(t?.trim()?"":" c-texty_input__button--disabled"),"data-qa":"texty_send_button","aria-label":"Send message","data-sk":"tooltip_parent",type:"submit",disabled:!t?.trim()},o.createElement("i",{className:"c-icon c-icon--paperplane-filled","aria-hidden":"true"})))))},C=(0,a.Z)("div",{target:"ec89ap00"})({name:"1v0d41s",styles:"display:flex;padding:8px 20px;&:hover{background:#eee;}& > div:first-of-type{display:flex;width:36px;margin-right:8px;& img{width:36px;height:36px;}}& > div:last-of-type{display:flex;flex:1;}"});var Z=n(7484),S=n.n(Z);const $=({data:e})=>{const t="Sender"in e?e.Sender:e.User;return o.createElement(C,null,o.createElement("div",null,o.createElement("img",{src:v().url(t.email,{s:"36px"}),alt:t.nickname})),o.createElement("div",{style:{flexWrap:"wrap"}},o.createElement("div",{style:{display:"flex",flex:"0 0 100%",alignItems:"center"}},o.createElement("b",{style:{marginRight:5}},t.nickname),o.createElement("span",{style:{fontSize:12}},S()(e.createdAt).format("h:mm A"))),o.createElement("p",{style:{flex:"0 0 100%",margin:0}},e.content)))},z=(0,a.Z)("div",{target:"e1jqbxcr0"})({name:"1dpnw7g",styles:"width:100%;display:flex;flex:1;"}),q=(0,a.Z)("section",{target:"e1jqbxcr1"})({name:"j6nott",styles:"margin-top:20px;border-top:1px solid #eee;"}),I=(0,a.Z)("div",{target:"e1jqbxcr2"})({name:"8ji0yp",styles:"display:flex;justify-content:center;flex:1;width:100%;position:sticky;top:14px;& button{font-weight:bold;font-size:13px;height:28px;line-height:27px;padding:0 16px;z-index:2;--saf-0:rgba(var(--sk_foreground_low,29,28,29),0.13);box-shadow:0 0 0 1px var(--saf-0),0 1px 3px 0 rgba(0,0,0,0.08);border-radius:24px;position:relative;top:-13px;background:white;border:none;outline:none;}"});var A=n(1298);const T=({scrollbarRef:e,isReachingEnd:t,isEmpty:n,chatSections:a,setSize:r})=>{const l=(0,o.useCallback)((a=>{0!==a.scrollTop||t||n||r((e=>e+1)).then((()=>{e.current?.scrollTop(e.current?.getScrollHeight()-a.scrollHeight)}))}),[t,n]);return o.createElement(z,null,o.createElement(A.$B,{autoHide:!0,ref:e,onScrollFrame:l},Object.entries(a).map((([e,t])=>o.createElement(q,{className:"section-"+e,key:e},o.createElement(I,null,o.createElement("button",null,e)),t.map((e=>o.createElement($,{key:e.id,data:e}))))))))},B=(0,a.Z)("header",{target:"exhfy1p0"})({name:"10in16a",styles:"height:64px;display:flex;width:100%;--saf-0:rgba(var(--sk_foreground_low,29,28,29),0.13);box-shadow:0 1px 0 var(--saf-0);padding:20px 16px 20px 20px;font-weight:bold;align-items:center;"});var P=n(3046),D=n(3564);function N(e){const t={};return e.forEach((e=>{const n=S()(e.createdAt).format("YYYY-MM-DD");Array.isArray(t[n])?t[n].push(e):t[n]=[e]})),t}var j=n(9669),M=n.n(j),H=n(5977),O=n(4723),R=n(6848);const U=({socket:e})=>{const{workspace:t,channel:n}=(0,H.UO)(),{data:a,revalidate:r}=(0,R.ZP)("/api/user",D.Z),{data:l}=(0,R.ZP)(`/api/workspace/${t}/channel/${n}`,D.Z),{data:i,revalidate:c,mutate:s,setSize:p}=(0,R.g_)((e=>`/api/workspace/${t}/channel/${n}/chats?perPage=15&page=${e+1}`),D.Z),{data:u,revalidate:g}=(0,R.ZP)(a?`/api/workspace/${t}/channel/${n}/members`:null,D.Z),[h,b,x]=(0,m.Z)(""),[f,k,E]=(0,m.Z)(""),[y,w]=(0,o.useState)(!1),v=(0,o.useRef)(null),C=0===i?.[0]?.length,Z=C||i&&i[i.length-1]?.length<15,S=(0,o.useCallback)((e=>{e.preventDefault(),M().post(`/api/workspace/${t}/channel/${n}/member`,{email:f}).then((()=>{g(),w(!1),E("")})).catch((e=>{console.dir(e),O.Am.error(e.response?.data,{position:"bottom-center"})}))}),[f]),$=(0,o.useCallback)((()=>{w(!1)}),[]),z=(0,o.useCallback)((e=>{e.preventDefault(),console.log(h),h?.trim()&&i&&l&&M().post(`/api/workspace/${t}/channel/${n}/chat`,{content:h}).then((()=>{x(""),s((e=>(e[0].unshift({id:(i[0][0]?.id||0)+1,content:h,UserId:a.id,User:a,createdAt:new Date,ChannelId:l.id,Channel:l}),e)),!1).then((()=>{v.current&&(console.log("scrollToBottom!"),v.current.scrollToBottom())}))})).catch(console.error)}),[h,t,n,l,v.current,a,i]);(0,o.useEffect)((()=>(e?.on("message",(e=>{e.Channel.name===n&&e.UserId!==a.id&&s((t=>(t[0].unshift(e),t)),!1).then((()=>{v.current&&(console.log(v.current.getScrollHeight(),v.current.getClientHeight()+v.current.getScrollTop()),v.current.getScrollHeight()<v.current.getClientHeight()+v.current.getScrollTop()+150?(console.log("scrollToBottom!"),v.current.scrollToBottom()):O.Am.success("새 메시지가 도착했습니다.",{onClick(){v.current?.scrollToBottom()},closeOnClick:!0}))}))})),()=>{e?.off("message")})),[v.current,e,a]),(0,o.useEffect)((()=>{1===i?.length&&(console.log("toBottom",i),v.current?.scrollToBottom())}),[i,v.current]);const q=(0,o.useCallback)((()=>{w(!0)}),[]),I=N(i?[].concat(...i).reverse():[]);return o.createElement("div",{style:{display:"flex",flexWrap:"wrap",height:"calc(100vh - 38px)",flexFlow:"column"}},o.createElement(B,null,o.createElement("span",null,"#",n),o.createElement("div",{style:{display:"flex",flex:1,justifyContent:"flex-end",alignItems:"center"}},o.createElement("span",null,u?.length),o.createElement("button",{onClick:q,className:"c-button-unstyled p-ia__view_header__button","aria-label":"Add people to #react-native","data-sk":"tooltip_parent",type:"button"},o.createElement("i",{className:"c-icon p-ia__view_header__button_icon c-icon--add-user","aria-hidden":"true"})))),o.createElement(T,{scrollbarRef:v,isReachingEnd:Z,isEmpty:C,chatSections:I,setSize:p}),o.createElement(_,{onSubmitForm:z,chat:h,onChangeChat:b,placeholder:"Message #"+n,data:u}),o.createElement(d,{show:y,onCloseModal:$},o.createElement("form",{onSubmit:S},o.createElement(P.__,{id:"member-label"},o.createElement("span",null,"채널 멤버 초대"),o.createElement(P.II,{id:"member",value:f,onChange:k})),o.createElement(P.zx,{type:"submit"},"생성하기"))),o.createElement(O.Ix,{position:"bottom-center"}))},F=(0,a.Z)("header",{target:"egh2dki0"})({name:"i5rome",styles:"height:64px;display:flex;width:100%;--saf-0:rgba(var(--sk_foreground_low,29,28,29),0.13);box-shadow:0 1px 0 var(--saf-0);padding:20px 16px 20px 20px;font-weight:bold;align-items:center;& img{margin-right:5px;}"}),L=({socket:e})=>{const{workspace:t,id:n}=(0,H.UO)(),{data:a}=(0,R.ZP)("/api/user",D.Z),{data:r}=(0,R.ZP)(`/api/workspace/${t}/user/${n}`,D.Z),{data:l,revalidate:i,mutate:c,setSize:s}=(0,R.g_)((e=>`/api/workspace/${t}/dm/${n}/chats?perPage=15&page=${e+1}`),D.Z),[p,d,u]=(0,m.Z)(""),g=(0,o.useRef)(null),h=0===l?.[0]?.length,b=h||l&&l[l.length-1]?.length<15,x=(0,o.useCallback)((e=>{e.preventDefault(),console.log(p),p?.trim()&&l&&(c((e=>(e[0].unshift({id:(l[0][0]?.id||0)+1,content:p,SenderId:a.id,Sender:a,ReceiverId:r.id,Receiver:r,createdAt:new Date}),e)),!1).then((()=>{g.current&&(console.log("scrollToBottom!"),g.current.scrollToBottom())})),M().post(`/api/workspace/${t}/dm/${n}/chat`,{content:p}).then((()=>{u("")})).catch(console.error))}),[p,t,n,g.current,r,l]);if((0,o.useEffect)((()=>(e?.on("dm",(e=>{e.SenderId===Number(n)&&c((t=>(t[0].unshift(e),t)),!1).then((()=>{g.current&&(console.log(g.current.getScrollHeight(),g.current.getClientHeight()+g.current.getScrollTop()),g.current.getScrollHeight()<g.current.getClientHeight()+g.current.getScrollTop()+150?(console.log("scrollToBottom!"),g.current.scrollToBottom()):O.Am.success("새 메시지가 도착했습니다.",{onClick(){g.current?.scrollToBottom()},closeOnClick:!0}))}))})),()=>{e?.off("dm")})),[g.current,e,n]),(0,o.useEffect)((()=>{1===l?.length&&(console.log("toBottom",l),g.current?.scrollToBottom())}),[l,g.current]),!r||!a)return null;const f=N(l?[].concat(...l).reverse():[]);return o.createElement("div",{style:{display:"flex",flexWrap:"wrap",height:"calc(100vh - 38px)",flexFlow:"column"}},o.createElement(F,null,o.createElement("img",{src:v().url(r.email,{s:"24px"}),alt:r.nickname}),o.createElement("span",null,r.nickname)),o.createElement(T,{scrollbarRef:g,isReachingEnd:b,isEmpty:h,chatSections:f,setSize:s}),o.createElement(_,{onSubmitForm:x,chat:p,onChangeChat:d,placeholder:"Message "+r.nickname,data:[]}))};var W=n(3727),Y=(n(5202),n(6809)),K=n.n(Y);const G=(0,a.Z)("div",{target:"e1yu0210"})({name:"146q31f",styles:"float:right;"}),J=(0,a.Z)("header",{target:"e1yu0211"})({name:"z7c3yo",styles:"height:38px;background:#350d36;color:#ffffff;box-shadow:0 1px 0 0 rgba(255,255,255,0.1);padding:5px;text-align:center;"}),Q=(0,a.Z)("img",{target:"e1yu0212"})({name:"sw188w",styles:"width:28px;height:28px;position:absolute;top:5px;right:16px;"}),V=(0,a.Z)("div",{target:"e1yu0213"})({name:"1yfii4x",styles:"padding:20px;& img{display:flex;}& #profile-name{font-weight:bold;display:inline-flex;}& #profile-active{font-size:13px;display:inline-flex;}"}),X=(0,a.Z)("button",{target:"e1yu0214"})({name:"xsdsuh",styles:"border:none;width:100%;border-top:1px solid rgb(29,28,29);background:transparent;display:block;height:33px;padding:5px 20px 5px;outline:none;cursor:pointer;"}),ee=(0,a.Z)("div",{target:"e1yu0215"})({name:"276x6p",styles:"width:65px;display:inline-block;background:#3f0e40;height:calc(100% - 38px);border-top:1px solid rgb(82,38,83);border-right:1px solid rgb(82,38,83);vertical-align:top;text-align:center;padding:15px 0 0;"}),te=(0,a.Z)("nav",{target:"e1yu0216"})({name:"1ub4xkk",styles:"width:260px;display:inline-block;background:#3f0e40;color:rgb(188,171,188);height:calc(100% - 38px);vertical-align:top;& a{padding-left:36px;color:inherit;text-decoration:none;height:28px;line-height:28px;display:flex;align-items:center;&.selected{color:white;}}& .bold{color:white;font-weight:bold;}& .count{margin-left:auto;background:#cd2553;border-radius:16px;display:inline-block;font-size:12px;font-weight:700;height:18px;line-height:18px;padding:0 9px;color:white;margin-right:16px;}& h2{height:36px;line-height:36px;margin:0;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;font-size:15px;}"}),ne=(0,a.Z)("button",{target:"e1yu0217"})({name:"mf88dq",styles:"height:64px;line-height:64px;border:none;width:100%;text-align:left;border-top:1px solid rgb(82,38,83);border-bottom:1px solid rgb(82,38,83);font-weight:900;font-size:24px;background:transparent;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;padding:0;padding-left:16px;margin:0;color:white;cursor:pointer;"}),ae=(0,a.Z)("div",{target:"e1yu0218"})({name:"1gcspn6",styles:"padding:10px 0 0;& h2{padding-left:20px;}& > button{width:100%;height:28px;padding:4px;border:none;background:transparent;border-top:1px solid rgb(28,29,28);cursor:pointer;&:last-of-type{border-bottom:1px solid rgb(28,29,28);}}"}),re=(0,a.Z)("div",{target:"e1yu0219"})({name:"1yega1q",styles:"display:inline-block;height:calc(100% - 160px);vertical-align:top;width:calc(100% - 325px);"}),le=(0,a.Z)("button",{target:"e1yu02110"})({name:"1u5ecpm",styles:"color:white;font-size:24px;display:inline-block;width:40px;height:40px;background:transparent;border:none;cursor:pointer;"}),oe=(0,a.Z)("button",{target:"e1yu02111"})({name:"1uwj8s5",styles:"display:inline-block;width:40px;height:40px;border-radius:10px;background:white;border:3px solid #3f0e40;margin-bottom:15px;font-size:18px;font-weight:700;color:black;cursor:pointer;"}),ie=(0,a.Z)("button",{target:"e1yu02112"})("background:transparent;border:none;width:26px;height:26px;display:inline-flex;justify-content:center;align-items:center;color:white;margin-left:10px;cursor:pointer;",(({collapse:e})=>e&&"\n    & i {\n      transform: none;\n    }\n  "),";");function ce(){return(ce=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}const se=()=>{const e=(0,H.UO)(),{workspace:t}=((0,H.TH)(),(0,H.$B)(),(0,H.k6)(),e),{data:n,revalidate:a}=(0,R.ZP)("/api/user",D.Z),{data:r,revalidate:l}=(0,R.ZP)(n?"/api/workspaces":null,D.Z),{data:i,revalidate:s}=(0,R.ZP)(n?`/api/workspace/${t}/channels`:null,D.Z),{data:p,revalidate:u,mutate:g}=(0,R.ZP)(n?`/api/workspace/${t}/members`:null,D.Z);console.log("rerender",p);const[h,b]=(0,o.useState)(!1),[x,f]=(0,o.useState)(!1),[k,E]=(0,o.useState)(!1),[y,w]=(0,o.useState)([]),[_,C]=(0,o.useState)({}),[Z,S]=(0,o.useState)(!1),[$,z]=(0,o.useState)(!1),[q,I]=(0,o.useState)(!1),[A,T]=(0,o.useState)(!1),[B,N,j]=(0,m.Z)(""),[F,Y,se]=(0,m.Z)(""),[pe,de,me]=(0,m.Z)(""),[ue,ge,he]=(0,m.Z)(""),be=(0,o.useCallback)((()=>{T((e=>!e))}),[]),xe=(0,o.useCallback)((()=>{I((e=>!e))}),[]),fe=(0,o.useCallback)((()=>{M().post("/api/logout").then((()=>{a()})).catch((e=>{console.dir(e),O.Am.error(e.response?.data,{position:"bottom-center"})}))}),[]),ke=(0,o.useCallback)((e=>{e.preventDefault(),M().post("/api/workspace",{workspace:B,url:F}).then((()=>{l(),b(!1),j(""),se("")})).catch((e=>{console.dir(e),O.Am.error(e.response?.data,{position:"bottom-center"})}))}),[B,F]),Ee=(0,o.useCallback)((e=>{e.preventDefault(),M().post(`/api/workspace/${t}/channel`,{name:pe}).then((()=>{s(),E(!1),me("")})).catch((e=>{console.dir(e),O.Am.error(e.response?.data,{position:"bottom-center"})}))}),[pe]),ye=(0,o.useCallback)((e=>{e.preventDefault(),M().post(`/api/workspace/${t}/member`,{email:ue}).then((()=>{u(),s(),f(!1),he("")})).catch((e=>{console.dir(e),O.Am.error(e.response?.data,{position:"bottom-center"})}))}),[ue]),we=(0,o.useCallback)((()=>{b(!0)}),[]),ve=(0,o.useCallback)((()=>{E(!0)}),[]),_e=(0,o.useCallback)((()=>{f(!0)}),[]),Ce=(0,o.useCallback)((()=>{b(!1),E(!1),f(!1)}),[]),Ze=(0,o.useCallback)((()=>{S((e=>!e))}),[]),Se=(0,o.useCallback)((()=>{z((e=>!e))}),[]),$e=(0,o.useRef)();(0,o.useEffect)((()=>{if(r){const e="https://sleact.nodebird.com",n=K()(`${e}/ws-${t}`,{transports:["websocket"]});n.on("hello",(e=>{console.log(e+" connected")})),n.on("onlineList",(e=>{w(e)})),n.on("offline",(e=>{console.log("offline",t,e),w((t=>t.filter((t=>t!==e))))})),n.on("dm",(e=>{C((t=>({...t,[e.SenderId]:t[e.SenderId]?t[e.SenderId]+1:1})))})),n.on("message",(e=>{C((t=>({...t,["c-"+e.ChannelId]:1})))})),$e.current=n}return()=>{console.log("clear",t),$e.current?.disconnect(),$e.current=void 0,w([])}}),[t,r,n]),(0,o.useEffect)((()=>{i&&$e.current?.emit("login",{id:n.id,channels:i.map((e=>e.id))})}),[i]);const ze=(0,o.useCallback)((e=>()=>{C((t=>({...t,[e]:0})))}),[]);return!1===n?o.createElement(H.l_,{to:"/login"}):o.createElement("div",null,o.createElement(J,null,n&&o.createElement(G,null,o.createElement("span",{onClick:Ze},o.createElement(Q,{src:v().url(n.email,{s:"28px"}),alt:n.nickname})),Z&&o.createElement(c,{style:{right:0,top:38},show:Z,onCloseModal:Ze},o.createElement(V,{style:{display:"flex"}},o.createElement("img",{src:v().url(n.email,{s:"36px"}),alt:n.nickname}),o.createElement("div",{style:{display:"flex",flexDirection:"column",marginLeft:10}},o.createElement("span",{id:"profile-name"},n.nickname),o.createElement("span",{id:"profile-active"},"Active"))),o.createElement(X,{onClick:fe},"로그아웃")))),o.createElement(ee,null,r?.map((e=>o.createElement(W.rU,{key:e.id,to:`/workspace/${e.url}/channel/일반`},o.createElement(oe,null,e.name.slice(0,1).toUpperCase())))),o.createElement(le,{onClick:we},"+")),o.createElement(te,null,o.createElement(ne,{onClick:Se},r?.find((e=>e.url===t))?.name),o.createElement(c,{show:$,onCloseModal:Se,style:{top:95,left:80}},o.createElement(ae,null,o.createElement("h2",null,r?.find((e=>e.url===t))?.name),o.createElement("button",{onClick:_e},"워크스페이스에 사용자 초대"),o.createElement("button",{onClick:ve},"채널 만들기"),o.createElement("button",{onClick:fe},"로그아웃"))),o.createElement("h2",null,o.createElement(ie,{collapse:A,onClick:be},o.createElement("i",{className:"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline","data-qa":"channel-section-collapse","aria-hidden":"true"})),o.createElement("span",null,"Channels")),o.createElement("div",null,!A&&i?.map((e=>{const n=_[`c-${e.id}`]||0;return o.createElement(W.OL,{key:e.name,activeClassName:"selected",to:`/workspace/${t}/channel/${e.name}`,onClick:ze(`c-${e.id}`)},o.createElement("span",{className:n>0?"bold":undefined},"# ",e.name))}))),o.createElement("h2",null,o.createElement(ie,{collapse:q,onClick:xe},o.createElement("i",{className:"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline","data-qa":"channel-section-collapse","aria-hidden":"true"})),o.createElement("span",null,"Direct Messages")),o.createElement("div",null,!q&&p?.map((e=>{const a=y.includes(e.id);const r=_[e.id]||0;return o.createElement(W.OL,{key:e.id,activeClassName:"selected",to:`/workspace/${t}/dm/${e.id}`,onClick:ze(e.id)},o.createElement("i",{className:`c-icon p-channel_sidebar__presence_icon p-channel_sidebar__presence_icon--dim_enabled c-presence ${a?"c-presence--active c-icon--presence-online":"c-icon--presence-offline"}`,"aria-hidden":"true","data-qa":"presence_indicator","data-qa-presence-self":"false","data-qa-presence-active":"false","data-qa-presence-dnd":"false"}),o.createElement("span",{className:r>0?"bold":undefined},e.nickname),e.id===n.id&&o.createElement("span",null," (나)"),r>0&&o.createElement("span",{className:"count"},r))})))),o.createElement(re,null,o.createElement(H.rs,null,o.createElement(H.AW,{path:"/workspace/:workspace/channel/:channel",render:e=>o.createElement(U,ce({},e,{socket:$e.current}))}),o.createElement(H.AW,{path:"/workspace/:workspace/dm/:id",render:e=>o.createElement(L,ce({},e,{socket:$e.current}))}))),o.createElement(d,{show:h,onCloseModal:Ce},o.createElement("form",{onSubmit:ke},o.createElement(P.__,{id:"workspace-label"},o.createElement("span",null,"워크스페이스 이름"),o.createElement(P.II,{id:"workspace",value:B,onChange:N})),o.createElement(P.__,{id:"workspace-url-label"},o.createElement("span",null,"워크스페이스 url"),o.createElement(P.II,{id:"workspace-url",value:F,onChange:Y})),o.createElement(P.zx,{type:"submit"},"생성하기"))),o.createElement(d,{show:k,onCloseModal:Ce},o.createElement("form",{onSubmit:Ee},o.createElement(P.__,{id:"channel-label"},o.createElement("span",null,"채널 이름"),o.createElement(P.II,{id:"channel",value:pe,onChange:de})),o.createElement(P.zx,null,"생성하기"))),o.createElement(d,{show:x,onCloseModal:Ce},o.createElement("form",{onSubmit:ye},o.createElement(P.__,{id:"member-label"},o.createElement("span",null,"이메일"),o.createElement(P.II,{id:"member",type:"email",value:ue,onChange:ge})),o.createElement(P.zx,{type:"submit"},"초대하기"))),o.createElement(O.Ix,{position:"bottom-center"}))}},418:()=>{}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,