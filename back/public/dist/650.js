(self.webpackChunksleact_ts_front=self.webpackChunksleact_ts_front||[]).push([[650],{1885:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>he});var a=n(6809),r=n.n(a);const l={},o=e=>{if(!e)return[void 0,t];function t(){e&&l[e]&&(l[e].disconnect(),delete l[e])}return l[e]||(l[e]=r()("https://sleact.nodebird.com/ws-"+e,{transports:["websocket"]}),console.info("create socket",e,l[e].id)),[l[e],t]};var i=n(8517);const c=(0,i.Z)("button",{target:"e190xuym0"})("background:transparent;border:none;width:26px;height:26px;display:inline-flex;justify-content:center;align-items:center;color:white;margin-left:10px;cursor:pointer;",(({collapse:e})=>e&&"\n    & i {\n      transform: none;\n    }\n  "),";");var s=n(7294),d=n(5977),p=n(3727);const m=({userData:e,channelData:t})=>{const{workspace:n}=(0,d.UO)(),[a]=o(n),[r,l]=(0,s.useState)(!1),[i,m]=(0,s.useState)({}),u=(0,s.useCallback)((()=>{l((e=>!e))}),[]),g=(0,s.useCallback)((e=>()=>{m((t=>({...t,[e]:void 0})))}),[]);(0,s.useEffect)((()=>{console.log("workspace 바꼈다",n),m({})}),[n]);const h=t=>{if(console.log("message왔다",t),t.content.match(/@\[(.+?)\]\((\d)\)/g)?.find((t=>t.match(/@\[(.+?)\]\((\d)\)/)[2]===e?.id.toString())))return m((e=>({...e,["c-"+t.ChannelId]:(e["c-"+t.ChannelId]||0)+1})));m((e=>({...e,["c-"+t.ChannelId]:e["c-"+t.ChannelId]||0})))};return(0,s.useEffect)((()=>(a?.on("message",h),console.log("socket on message",a?.hasListeners("message"),a),()=>{a?.off("message",h),console.log("socket off message",a?.hasListeners("message"))})),[a,e]),s.createElement(s.Fragment,null,s.createElement("h2",null,s.createElement(c,{collapse:r,onClick:u},s.createElement("i",{className:"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline","data-qa":"channel-section-collapse","aria-hidden":"true"})),s.createElement("span",null,"Channels")),s.createElement("div",null,!r&&t?.map((e=>{const t=i["c-"+e.id];return s.createElement(p.OL,{key:e.name,activeClassName:"selected",to:`/workspace/${n}/channel/${e.name}`,onClick:g("c-"+e.id)},s.createElement("span",{className:void 0!==t&&t>=0?"bold":void 0},"# ",e.name),void 0!==t&&t>0&&s.createElement("span",{className:"count"},t))}))))};var u=n(3564),g=n(6848);const h=({userData:e})=>{const{workspace:t}=(0,d.UO)(),{data:n}=(0,g.ZP)(e?`/api/workspace/${t}/members`:null,u.Z),[a]=o(t),[r,l]=(0,s.useState)(!1),[i,m]=(0,s.useState)({}),[h,x]=(0,s.useState)([]),b=(0,s.useCallback)((()=>{l((e=>!e))}),[]),f=(0,s.useCallback)((e=>()=>{m((t=>({...t,[e]:0})))}),[]),k=e=>{console.log("dm왔다",e),m((t=>({...t,[e.SenderId]:t[e.SenderId]?t[e.SenderId]+1:1})))};return(0,s.useEffect)((()=>{console.log("workspace 바꼈다",t),x([]),m({})}),[t]),(0,s.useEffect)((()=>(a?.on("onlineList",(e=>{x(e)})),a?.on("dm",k),console.log("socket on dm",a?.hasListeners("dm"),a),()=>{a?.off("dm",k),console.log("socket off dm",a?.hasListeners("dm")),a?.off("onlineList")})),[a]),s.createElement(s.Fragment,null,s.createElement("h2",null,s.createElement(c,{collapse:r,onClick:b},s.createElement("i",{className:"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline","data-qa":"channel-section-collapse","aria-hidden":"true"})),s.createElement("span",null,"Direct Messages")),s.createElement("div",null,!r&&n?.map((n=>{const a=h.includes(n.id),r=i[n.id]||0;return s.createElement(p.OL,{key:n.id,activeClassName:"selected",to:`/workspace/${t}/dm/${n.id}`,onClick:f(n.id)},s.createElement("i",{className:"c-icon p-channel_sidebar__presence_icon p-channel_sidebar__presence_icon--dim_enabled c-presence "+(a?"c-presence--active c-icon--presence-online":"c-icon--presence-offline"),"aria-hidden":"true","data-qa":"presence_indicator","data-qa-presence-self":"false","data-qa-presence-active":"false","data-qa-presence-dnd":"false"}),s.createElement("span",{className:r>0?"bold":void 0},n.nickname),n.id===e?.id&&s.createElement("span",null," (나)"),r>0&&s.createElement("span",{className:"count"},r))}))))},x=(0,i.Z)("div",{target:"eus8aqr0"})({name:"lwth7x",styles:"position:fixed;top:0;right:0;left:0;bottom:0;z-index:1000;& > div{position:absolute;display:inline-block;--saf-0:rgba(var(--sk_foreground_low,29,28,29),0.13);box-shadow:0 0 0 1px var(--saf-0),0 4px 12px 0 rgba(0,0,0,0.12);background-color:rgba(var(--sk_foreground_min_solid,248,248,248),1);border-radius:6px;user-select:none;min-width:360px;z-index:512;max-height:calc(100vh - 20px);color:rgb(29,28,29);}"}),b=(0,i.Z)("button",{target:"eus8aqr1"})({name:"87xlfi",styles:"position:absolute;right:10px;top:6px;background:transparent;border:none;font-size:30px;cursor:pointer;"}),f=({closeButton:e,style:t,show:n,children:a,onCloseModal:r})=>{const l=(0,s.useCallback)((e=>{e.stopPropagation()}),[]);return n?s.createElement(x,{onClick:r},s.createElement("div",{onClick:l,style:t},e&&s.createElement(b,{onClick:r},"×"),a)):null};f.defaultProps={closeButton:!0};const k=f,E=(0,i.Z)("div",{target:"e1q3ybao0"})({name:"1ol8hdt",styles:"position:fixed;text-align:center;left:0;bottom:0;top:0;right:0;z-index:1022;& > div{margin-top:200px;display:inline-block;width:440px;background:white;--saf-0:rgba(var(--sk_foreground_low,29,28,29),0.13);box-shadow:0 0 0 1px var(--saf-0),0 4px 12px 0 rgba(0,0,0,0.12);background-color:rgba(var(--sk_foreground_min_solid,248,248,248),1);border-radius:6px;user-select:none;max-width:440px;padding:30px 40px 0;z-index:1012;position:relative;}"}),y=(0,i.Z)("button",{target:"e1q3ybao1"})({name:"87xlfi",styles:"position:absolute;right:10px;top:6px;background:transparent;border:none;font-size:30px;cursor:pointer;"}),w=({show:e,children:t,onCloseModal:n})=>{const a=(0,s.useCallback)((e=>{e.stopPropagation()}),[]);return e?s.createElement(E,{onClick:n},s.createElement("div",{onClick:a},s.createElement(y,{onClick:n},"×"),t)):null};var v=n(8678),_=n(1039);const C=(0,i.Z)("div",{target:"e298qi10"})({name:"136i1lu",styles:"display:flex;width:100%;padding:20px;padding-top:0;"}),Z=(0,i.Z)("form",{target:"e298qi11"})({name:"1128hi6",styles:"color:rgb(29,28,29);font-size:15px;width:100%;border-radius:4px;border:1px solid rgb(29,28,29);"}),S=(0,i.Z)(_.r,{target:"e298qi12"})({name:"hgrcve",styles:"font-family:Slack-Lato,appleLogo,sans-serif;font-size:15px;padding:8px 9px;& strong{background:skyblue;}& textarea{height:44px;padding:9px 10px !important;outline:none !important;border-radius:4px !important;resize:none !important;line-height:22px;border:none;}& ul{border:1px solid lightgray;max-height:200px;overflow-y:auto;padding:9px 10px;background:white;border-radius:4px;width:150px;}"}),$=(0,i.Z)("div",{target:"e298qi13"})({name:"pvyb1v",styles:"position:relative;background:rgb(248,248,248);height:41px;display:flex;border-top:1px solid rgb(221,221,221);align-items:center;border-bottom-left-radius:4px;border-bottom-right-radius:4px;"}),z=(0,i.Z)("button",{target:"e298qi14"})({name:"b9l5gg",styles:"position:absolute;right:5px;top:5px;"}),I=(0,i.Z)("button",{target:"e298qi15"})("padding:4px 20px;background:transparent;border:none;display:flex;align-items:center;color:rgb(28,29,28);width:100%;& img{margin-right:5px;}",(({focus:e})=>e&&"\n    background: #1264a3;\n    color: white;\n  "),";");var q=n(9367),A=n.n(q),D=n(6182),B=n.n(D);const T=({onSubmitForm:e,chat:t,onChangeChat:n,placeholder:a,data:r})=>{const l=(0,s.useRef)(null);(0,s.useEffect)((()=>{l.current&&A()(l.current)}),[l.current]);const o=(0,s.useCallback)((t=>{"Enter"===t.key&&(t.shiftKey||(t.preventDefault(),e(t)))}),[t]),i=(0,s.useCallback)(((e,t,n,a,l)=>r?s.createElement(I,{focus:l},s.createElement("img",{src:B().url(r[a].email,{s:"20px"}),alt:r[a].nickname}),s.createElement("span",null,n)):null),[r]);return s.createElement(C,null,s.createElement(Z,{onSubmit:e},s.createElement(S,{id:"editor-chat",value:t,onChange:n,onKeyPress:o,placeholder:a,inputRef:l,allowSuggestionsAboveCursor:!0},s.createElement(_.p,{appendSpaceOnAdd:!0,trigger:"@",data:r?.map((e=>({id:e.id,display:e.nickname})))||[],renderSuggestion:i})),s.createElement($,null,s.createElement(z,{className:"c-button-unstyled c-icon_button c-icon_button--light c-icon_button--size_medium c-texty_input__button c-texty_input__button--send"+(t?.trim()?"":" c-texty_input__button--disabled"),"data-qa":"texty_send_button","aria-label":"Send message","data-sk":"tooltip_parent",type:"submit",disabled:!t?.trim()},s.createElement("i",{className:"c-icon c-icon--paperplane-filled","aria-hidden":"true"})))))},N=(0,i.Z)("div",{target:"ec89ap00"})({name:"13fa69t",styles:"display:flex;padding:8px 20px;&:hover{background:#eee;}& > div:first-of-type{display:flex;width:36px;margin-right:8px;& img{width:36px;height:36px;}}& > div:last-of-type{display:flex;flex:1;}& a{text-decoration:none;color:deepskyblue;}"});var M=n(7484),P=n.n(M),R=n(8817);const U=(0,s.memo)((({data:e})=>{const{workspace:t}=(0,d.UO)(),n="Sender"in e?e.Sender:e.User,a=(0,s.useMemo)((()=>(0,R.Z)({pattern:/@\[(.+?)\]\((\d+?)\)|\n/g,decorator(e,n){const a=e.match(/@\[(.+?)\]\((\d+?)\)/);return a?s.createElement(p.rU,{key:e+n,to:`/workspace/${t}/dm/${a[2]}`},"@",a[1]):s.createElement("br",{key:n})},input:e.content})),[e.content]);return s.createElement(N,null,s.createElement("div",null,s.createElement("img",{src:B().url(n.email,{s:"36px"}),alt:n.nickname})),s.createElement("div",{style:{flexWrap:"wrap"}},s.createElement("div",{style:{display:"flex",flex:"0 0 100%",alignItems:"center"}},s.createElement("b",{style:{marginRight:5}},n.nickname),s.createElement("span",{style:{fontSize:12}},P()(e.createdAt).format("h:mm A"))),s.createElement("p",{style:{flex:"0 0 100%",margin:0}},a)))})),j=(0,i.Z)("div",{target:"e1jqbxcr0"})({name:"1dpnw7g",styles:"width:100%;display:flex;flex:1;"}),O=(0,i.Z)("section",{target:"e1jqbxcr1"})({name:"j6nott",styles:"margin-top:20px;border-top:1px solid #eee;"}),L=(0,i.Z)("div",{target:"e1jqbxcr2"})({name:"8ji0yp",styles:"display:flex;justify-content:center;flex:1;width:100%;position:sticky;top:14px;& button{font-weight:bold;font-size:13px;height:28px;line-height:27px;padding:0 16px;z-index:2;--saf-0:rgba(var(--sk_foreground_low,29,28,29),0.13);box-shadow:0 0 0 1px var(--saf-0),0 1px 3px 0 rgba(0,0,0,0.08);border-radius:24px;position:relative;top:-13px;background:white;border:none;outline:none;}"});var W=n(1298);const F=({scrollbarRef:e,isReachingEnd:t,isEmpty:n,chatSections:a,setSize:r})=>{const l=(0,s.useCallback)((a=>{0!==a.scrollTop||t||n||r((e=>e+1)).then((()=>{e.current?.scrollTop(e.current?.getScrollHeight()-a.scrollHeight)}))}),[t,n]);return s.createElement(j,null,s.createElement(W.$B,{autoHide:!0,ref:e,onScrollFrame:l},Object.entries(a).map((([e,t])=>s.createElement(O,{className:"section-"+e,key:e},s.createElement(L,null,s.createElement("button",null,e)),t.map((e=>s.createElement(U,{key:e.id,data:e}))))))))},H=(0,i.Z)("header",{target:"exhfy1p0"})({name:"10in16a",styles:"height:64px;display:flex;width:100%;--saf-0:rgba(var(--sk_foreground_low,29,28,29),0.13);box-shadow:0 1px 0 var(--saf-0);padding:20px 16px 20px 20px;font-weight:bold;align-items:center;"});var Y=n(3046);function K(e){const t={};return e.forEach((e=>{const n=P()(e.createdAt).format("YYYY-MM-DD");Array.isArray(t[n])?t[n].push(e):t[n]=[e]})),t}var G=n(9669),J=n.n(G),Q=n(4723);const V=()=>{const{workspace:e,channel:t}=(0,d.UO)(),[n]=o(e),{data:a,revalidate:r}=(0,g.ZP)("/api/user",u.Z),{data:l}=(0,g.ZP)(`/api/workspace/${e}/channels`,u.Z),i=l?.find((e=>e.name===t)),{data:c,revalidate:p,mutate:m,setSize:h}=(0,g.g_)((n=>`/api/workspace/${e}/channel/${t}/chats?perPage=20&page=${n+1}`),u.Z),{data:x,revalidate:b}=(0,g.ZP)(a?`/api/workspace/${e}/channel/${t}/members`:null,u.Z),[f,k,E]=(0,v.Z)(""),[y,_,C]=(0,v.Z)(""),[Z,S]=(0,s.useState)(!1),$=(0,s.useRef)(null),z=0===c?.[0]?.length,I=z||c&&c[c.length-1]?.length<20,q=(0,s.useCallback)((n=>{n.preventDefault(),y&&y.trim()&&J().post(`/api/workspace/${e}/channel/${t}/member`,{email:y}).then((()=>{b(),S(!1),C("")})).catch((e=>{console.dir(e),Q.Am.error(e.response?.data,{position:"bottom-center"})}))}),[y]),A=(0,s.useCallback)((()=>{S(!1)}),[]),D=(0,s.useCallback)((n=>{if(n.preventDefault(),f?.trim()&&c&&i&&a){const n=f;m((e=>(e[0].unshift({id:(c[0][0]?.id||0)+1,content:n,UserId:a.id,User:a,createdAt:new Date,ChannelId:i.id,Channel:i}),e)),!1).then((()=>{E(""),$.current&&(console.log("scrollToBottom!"),$.current.scrollToBottom())})),J().post(`/api/workspace/${e}/channel/${t}/chat`,{content:n}).catch(console.error)}}),[f,e,t,i,$.current,a,c]),B=e=>{e.Channel.name===t&&e.UserId!==a?.id&&m((t=>(t[0].unshift(e),t)),!1).then((()=>{$.current&&($.current.getScrollHeight()<$.current.getClientHeight()+$.current.getScrollTop()+150?(console.log("scrollToBottom!"),$.current.scrollToBottom()):Q.Am.success("새 메시지가 도착했습니다.",{onClick(){$.current?.scrollToBottom()},closeOnClick:!0}))}))};(0,s.useEffect)((()=>(n?.on("message",B),()=>{n?.off("message",B)})),[$.current,n,a]),(0,s.useEffect)((()=>{1===c?.length&&(console.log("toBottom",c),$.current?.scrollToBottom())}),[c,$.current]);const N=(0,s.useCallback)((()=>{S(!0)}),[]);if(l&&!i)return s.createElement(d.l_,{to:`/workspace/${e}/channel/일반`});const M=K(c?[].concat(...c).reverse():[]);return s.createElement("div",{style:{display:"flex",flexWrap:"wrap",height:"calc(100vh - 38px)",flexFlow:"column"}},s.createElement(H,null,s.createElement("span",null,"#",t),s.createElement("div",{style:{display:"flex",flex:1,justifyContent:"flex-end",alignItems:"center"}},s.createElement("span",null,x?.length),s.createElement("button",{onClick:N,className:"c-button-unstyled p-ia__view_header__button","aria-label":"Add people to #react-native","data-sk":"tooltip_parent",type:"button"},s.createElement("i",{className:"c-icon p-ia__view_header__button_icon c-icon--add-user","aria-hidden":"true"})))),s.createElement(F,{scrollbarRef:$,isReachingEnd:I,isEmpty:z,chatSections:M,setSize:h}),s.createElement(T,{onSubmitForm:D,chat:f,onChangeChat:k,placeholder:"Message #"+t,data:x}),s.createElement(w,{show:Z,onCloseModal:A},s.createElement("form",{onSubmit:q},s.createElement(Y.__,{id:"member-label"},s.createElement("span",null,"채널 멤버 초대"),s.createElement(Y.II,{id:"member",value:y,onChange:_})),s.createElement(Y.zx,{type:"submit"},"생성하기"))),s.createElement(Q.Ix,{position:"bottom-center"}))},X=(0,i.Z)("header",{target:"egh2dki0"})({name:"i5rome",styles:"height:64px;display:flex;width:100%;--saf-0:rgba(var(--sk_foreground_low,29,28,29),0.13);box-shadow:0 1px 0 var(--saf-0);padding:20px 16px 20px 20px;font-weight:bold;align-items:center;& img{margin-right:5px;}"}),ee=()=>{const{workspace:e,id:t}=(0,d.UO)(),[n]=o(e),{data:a}=(0,g.ZP)("/api/user",u.Z),{data:r}=(0,g.ZP)(`/api/workspace/${e}/user/${t}`,u.Z),{data:l,revalidate:i,mutate:c,setSize:p}=(0,g.g_)((n=>`/api/workspace/${e}/dm/${t}/chats?perPage=20&page=${n+1}`),u.Z),[m,h,x]=(0,v.Z)(""),b=(0,s.useRef)(null),f=0===l?.[0]?.length,k=f||l&&l[l.length-1]?.length<20,E=(0,s.useCallback)((n=>{if(n.preventDefault(),m?.trim()&&l){const n=m;c((e=>(e[0].unshift({id:(l[0][0]?.id||0)+1,content:n,SenderId:a.id,Sender:a,ReceiverId:r.id,Receiver:r,createdAt:new Date}),e)),!1).then((()=>{x(""),b.current&&(console.log("scrollToBottom!"),b.current.scrollToBottom())})),J().post(`/api/workspace/${e}/dm/${t}/chat`,{content:m}).catch(console.error)}}),[m,e,t,b.current,r,l]),y=e=>{e.SenderId===Number(t)&&a.id!==Number(t)&&c((t=>(t[0].unshift(e),t)),!1).then((()=>{b.current&&(b.current.getScrollHeight()<b.current.getClientHeight()+b.current.getScrollTop()+150?(console.log("scrollToBottom!"),b.current.scrollToBottom()):Q.Am.success("새 메시지가 도착했습니다.",{onClick(){b.current?.scrollToBottom()},closeOnClick:!0}))}))};if((0,s.useEffect)((()=>(n?.on("dm",y),()=>{n?.off("dm",y)})),[b.current,n,t]),(0,s.useEffect)((()=>{1===l?.length&&(console.log("toBottom",l),b.current?.scrollToBottom())}),[l,b.current]),!r||!a)return null;const w=K(l?[].concat(...l).reverse():[]);return s.createElement("div",{style:{display:"flex",flexWrap:"wrap",height:"calc(100vh - 38px)",flexFlow:"column"}},s.createElement(X,null,s.createElement("img",{src:B().url(r.email,{s:"24px"}),alt:r.nickname}),s.createElement("span",null,r.nickname)),s.createElement(F,{scrollbarRef:b,isReachingEnd:k,isEmpty:f,chatSections:w,setSize:p}),s.createElement(T,{onSubmitForm:E,chat:m,onChangeChat:h,placeholder:"Message "+r.nickname,data:[]}))};n(5202);const te=(0,i.Z)("div",{target:"e1yu0210"})({name:"146q31f",styles:"float:right;"}),ne=(0,i.Z)("header",{target:"e1yu0211"})({name:"z7c3yo",styles:"height:38px;background:#350d36;color:#ffffff;box-shadow:0 1px 0 0 rgba(255,255,255,0.1);padding:5px;text-align:center;"}),ae=(0,i.Z)("img",{target:"e1yu0212"})({name:"sw188w",styles:"width:28px;height:28px;position:absolute;top:5px;right:16px;"}),re=(0,i.Z)("div",{target:"e1yu0213"})({name:"m1xq0m",styles:"display:flex;padding:20px;& img{display:flex;}& > div{display:flex;flex-direction:column;margin-left:10px;}& #profile-name{font-weight:bold;display:inline-flex;}& #profile-active{font-size:13px;display:inline-flex;}"}),le=(0,i.Z)("button",{target:"e1yu0214"})({name:"xsdsuh",styles:"border:none;width:100%;border-top:1px solid rgb(29,28,29);background:transparent;display:block;height:33px;padding:5px 20px 5px;outline:none;cursor:pointer;"}),oe=(0,i.Z)("div",{target:"e1yu0215"})({name:"13pmxen",styles:"display:flex;flex:1;"}),ie=(0,i.Z)("div",{target:"e1yu0216"})({name:"kbjkj2",styles:"width:65px;display:inline-flex;flex-direction:column;align-items:center;background:#3f0e40;border-top:1px solid rgb(82,38,83);border-right:1px solid rgb(82,38,83);vertical-align:top;text-align:center;padding:15px 0 0;"}),ce=(0,i.Z)("nav",{target:"e1yu0217"})({name:"1o7bixd",styles:"width:260px;display:inline-flex;flex-direction:column;background:#3f0e40;color:rgb(188,171,188);vertical-align:top;& a{padding-left:36px;color:inherit;text-decoration:none;height:28px;line-height:28px;display:flex;align-items:center;&.selected{color:white;}}& .bold{color:white;font-weight:bold;}& .count{margin-left:auto;background:#cd2553;border-radius:16px;display:inline-block;font-size:12px;font-weight:700;height:18px;line-height:18px;padding:0 9px;color:white;margin-right:16px;}& h2{height:36px;line-height:36px;margin:0;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;font-size:15px;}"}),se=(0,i.Z)("button",{target:"e1yu0218"})({name:"mf88dq",styles:"height:64px;line-height:64px;border:none;width:100%;text-align:left;border-top:1px solid rgb(82,38,83);border-bottom:1px solid rgb(82,38,83);font-weight:900;font-size:24px;background:transparent;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;padding:0;padding-left:16px;margin:0;color:white;cursor:pointer;"}),de=(0,i.Z)("div",{target:"e1yu0219"})({name:"1bavzcg",styles:"height:calc(100vh - 102px);overflow-y:auto;"}),pe=(0,i.Z)("div",{target:"e1yu02110"})({name:"1gcspn6",styles:"padding:10px 0 0;& h2{padding-left:20px;}& > button{width:100%;height:28px;padding:4px;border:none;background:transparent;border-top:1px solid rgb(28,29,28);cursor:pointer;&:last-of-type{border-bottom:1px solid rgb(28,29,28);}}"}),me=(0,i.Z)("div",{target:"e1yu02111"})({name:"1rr4qq7",styles:"flex:1;"}),ue=(0,i.Z)("button",{target:"e1yu02112"})({name:"1u5ecpm",styles:"color:white;font-size:24px;display:inline-block;width:40px;height:40px;background:transparent;border:none;cursor:pointer;"}),ge=(0,i.Z)("button",{target:"e1yu02113"})({name:"1uwj8s5",styles:"display:inline-block;width:40px;height:40px;border-radius:10px;background:white;border:3px solid #3f0e40;margin-bottom:15px;font-size:18px;font-weight:700;color:black;cursor:pointer;"}),he=()=>{const e=(0,d.UO)(),{workspace:t}=((0,d.TH)(),(0,d.$B)(),(0,d.k6)(),e),[n,a]=o(t),{data:r,revalidate:l}=(0,g.ZP)("/api/user",u.Z),{data:i,revalidate:c}=(0,g.ZP)(r?`/api/workspace/${t}/channels`:null,u.Z);console.log("rerender","userData",r,"channelData",i);const[x,b]=(0,s.useState)(!1),[f,E]=(0,s.useState)(!1),[y,_]=(0,s.useState)(!1),[C,Z]=(0,s.useState)(!1),[S,$]=(0,s.useState)(!1),[z,I,q]=(0,v.Z)(""),[A,D,T]=(0,v.Z)(""),[N,M,P]=(0,v.Z)(""),[R,U,j]=(0,v.Z)(""),O=(0,s.useCallback)((()=>{J().post("/api/logout").then((()=>{l()})).catch((e=>{console.dir(e),Q.Am.error(e.response?.data,{position:"bottom-center"})}))}),[]),L=(0,s.useCallback)((e=>{e.preventDefault(),z&&z.trim()&&A&&A.trim()&&J().post("/api/workspace",{workspace:z,url:A}).then((()=>{l(),b(!1),q(""),T("")})).catch((e=>{console.dir(e),Q.Am.error(e.response?.data,{position:"bottom-center"})}))}),[z,A]),W=(0,s.useCallback)((e=>{e.preventDefault(),N&&N.trim()&&J().post(`/api/workspace/${t}/channel`,{name:N}).then((()=>{c(),_(!1),P("")})).catch((e=>{console.dir(e),Q.Am.error(e.response?.data,{position:"bottom-center"})}))}),[N]),F=(0,s.useCallback)((e=>{e.preventDefault(),R&&R.trim()&&J().post(`/api/workspace/${t}/member`,{email:R}).then((()=>{c(),E(!1),j("")})).catch((e=>{console.dir(e),Q.Am.error(e.response?.data,{position:"bottom-center"})}))}),[R]),H=(0,s.useCallback)((()=>{b(!0)}),[]),K=(0,s.useCallback)((()=>{_(!0)}),[]),G=(0,s.useCallback)((()=>{E(!0)}),[]),X=(0,s.useCallback)((()=>{b(!1),_(!1),E(!1)}),[]),he=(0,s.useCallback)((()=>{Z((e=>!e))}),[]),xe=(0,s.useCallback)((()=>{$((e=>!e))}),[]);return(0,s.useEffect)((()=>()=>{console.info("disconnect socket",t),a()}),[t]),(0,s.useEffect)((()=>{i&&r&&(console.info("로그인하자"),n?.emit("login",{id:r?.id,channels:i.map((e=>e.id))}))}),[r,i]),!1===r?s.createElement(d.l_,{to:"/login"}):r&&!r.Workspaces.find((e=>e.url===t))?s.createElement(d.l_,{to:"/workspace/sleact/channel/일반"}):s.createElement("div",null,s.createElement(ne,null,r&&s.createElement(te,null,s.createElement("span",{onClick:he},s.createElement(ae,{src:B().url(r.email,{s:"28px"}),alt:r.nickname})),C&&s.createElement(k,{style:{right:0,top:38},show:C,onCloseModal:he},s.createElement(re,null,s.createElement("img",{src:B().url(r.email,{s:"36px"}),alt:r.nickname}),s.createElement("div",null,s.createElement("span",{id:"profile-name"},r.nickname),s.createElement("span",{id:"profile-active"},"Active"))),s.createElement(le,{onClick:O},"로그아웃")))),s.createElement(oe,null,s.createElement(ie,null,r?.Workspaces.map((e=>s.createElement(p.rU,{key:e.id,to:`/workspace/${e.url}/channel/일반`},s.createElement(ge,null,e.name.slice(0,1).toUpperCase())))),s.createElement(ue,{onClick:H},"+")),s.createElement(ce,null,s.createElement(se,{onClick:xe},r?.Workspaces.find((e=>e.url===t))?.name),s.createElement(de,null,s.createElement(k,{show:S,onCloseModal:xe,style:{top:95,left:80}},s.createElement(pe,null,s.createElement("h2",null,r?.Workspaces.find((e=>e.url===t))?.name),s.createElement("button",{onClick:G},"워크스페이스에 사용자 초대"),s.createElement("button",{onClick:K},"채널 만들기"),s.createElement("button",{onClick:O},"로그아웃"))),s.createElement(m,{userData:r,channelData:i}),s.createElement(h,{userData:r}))),s.createElement(me,null,s.createElement(d.rs,null,s.createElement(d.AW,{path:"/workspace/:workspace/channel/:channel",component:V}),s.createElement(d.AW,{path:"/workspace/:workspace/dm/:id",component:ee})))),s.createElement(w,{show:x,onCloseModal:X},s.createElement("form",{onSubmit:L},s.createElement(Y.__,{id:"workspace-label"},s.createElement("span",null,"워크스페이스 이름"),s.createElement(Y.II,{id:"workspace",value:z,onChange:I})),s.createElement(Y.__,{id:"workspace-url-label"},s.createElement("span",null,"워크스페이스 url"),s.createElement(Y.II,{id:"workspace-url",value:A,onChange:D})),s.createElement(Y.zx,{type:"submit"},"생성하기"))),s.createElement(w,{show:y,onCloseModal:X},s.createElement("form",{onSubmit:W},s.createElement(Y.__,{id:"channel-label"},s.createElement("span",null,"채널 이름"),s.createElement(Y.II,{id:"channel",value:N,onChange:M})),s.createElement(Y.zx,null,"생성하기"))),s.createElement(w,{show:f,onCloseModal:X},s.createElement("form",{onSubmit:F},s.createElement(Y.__,{id:"member-label"},s.createElement("span",null,"이메일"),s.createElement(Y.II,{id:"member",type:"email",value:R,onChange:U})),s.createElement(Y.zx,{type:"submit"},"초대하기"))),s.createElement(Q.Ix,{position:"bottom-center"}))}},418:()=>{}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbGVhY3QtdHMtZnJvbnQvLi9ob29rcy91c2VTb2NrZXQudHMiLCJ3ZWJwYWNrOi8vc2xlYWN0LXRzLWZyb250Ly4vY29tcG9uZW50cy9ETUxpc3Qvc3R5bGVzLnRzeCIsIndlYnBhY2s6Ly9zbGVhY3QtdHMtZnJvbnQvLi9jb21wb25lbnRzL0NoYW5uZWxMaXN0L2luZGV4LnRzeCIsIndlYnBhY2s6Ly9zbGVhY3QtdHMtZnJvbnQvLi9jb21wb25lbnRzL0RNTGlzdC9pbmRleC50c3giLCJ3ZWJwYWNrOi8vc2xlYWN0LXRzLWZyb250Ly4vY29tcG9uZW50cy9NZW51L3N0eWxlcy50c3giLCJ3ZWJwYWNrOi8vc2xlYWN0LXRzLWZyb250Ly4vY29tcG9uZW50cy9NZW51L2luZGV4LnRzeCIsIndlYnBhY2s6Ly9zbGVhY3QtdHMtZnJvbnQvLi9jb21wb25lbnRzL01vZGFsL3N0eWxlcy50c3giLCJ3ZWJwYWNrOi8vc2xlYWN0LXRzLWZyb250Ly4vY29tcG9uZW50cy9Nb2RhbC9pbmRleC50c3giLCJ3ZWJwYWNrOi8vc2xlYWN0LXRzLWZyb250Ly4vY29tcG9uZW50cy9DaGF0Qm94L3N0eWxlcy50c3giLCJ3ZWJwYWNrOi8vc2xlYWN0LXRzLWZyb250Ly4vY29tcG9uZW50cy9DaGF0Qm94L2luZGV4LnRzeCIsIndlYnBhY2s6Ly9zbGVhY3QtdHMtZnJvbnQvLi9jb21wb25lbnRzL0NoYXQvc3R5bGVzLnRzeCIsIndlYnBhY2s6Ly9zbGVhY3QtdHMtZnJvbnQvLi9jb21wb25lbnRzL0NoYXQvaW5kZXgudHN4Iiwid2VicGFjazovL3NsZWFjdC10cy1mcm9udC8uL2NvbXBvbmVudHMvQ2hhdExpc3Qvc3R5bGVzLnRzeCIsIndlYnBhY2s6Ly9zbGVhY3QtdHMtZnJvbnQvLi9jb21wb25lbnRzL0NoYXRMaXN0L2luZGV4LnRzeCIsIndlYnBhY2s6Ly9zbGVhY3QtdHMtZnJvbnQvLi9wYWdlcy9DaGFubmVsL3N0eWxlcy50c3giLCJ3ZWJwYWNrOi8vc2xlYWN0LXRzLWZyb250Ly4vdXRpbHMvbWFrZVNlY3Rpb24udHMiLCJ3ZWJwYWNrOi8vc2xlYWN0LXRzLWZyb250Ly4vcGFnZXMvQ2hhbm5lbC9pbmRleC50c3giLCJ3ZWJwYWNrOi8vc2xlYWN0LXRzLWZyb250Ly4vcGFnZXMvRGlyZWN0TWVzc2FnZS9zdHlsZXMudHN4Iiwid2VicGFjazovL3NsZWFjdC10cy1mcm9udC8uL3BhZ2VzL0RpcmVjdE1lc3NhZ2UvaW5kZXgudHN4Iiwid2VicGFjazovL3NsZWFjdC10cy1mcm9udC8uL2xheW91dHMvV29ya3NwYWNlL3N0eWxlcy50c3giLCJ3ZWJwYWNrOi8vc2xlYWN0LXRzLWZyb250Ly4vbGF5b3V0cy9Xb3Jrc3BhY2UvaW5kZXgudHN4Il0sIm5hbWVzIjpbInNvY2tldHMiLCJ3b3Jrc3BhY2UiLCJ1bmRlZmluZWQiLCJkaXNjb25uZWN0IiwiaW8iLCJ0cmFuc3BvcnRzIiwiY29uc29sZSIsImluZm8iLCJpZCIsIkNvbGxhcHNlQnV0dG9uIiwiY29sbGFwc2UiLCJ1c2VyRGF0YSIsImNoYW5uZWxEYXRhIiwidXNlUGFyYW1zIiwic29ja2V0IiwidXNlU29ja2V0IiwiY2hhbm5lbENvbGxhcHNlIiwic2V0Q2hhbm5lbENvbGxhcHNlIiwidXNlU3RhdGUiLCJjb3VudExpc3QiLCJzZXRDb3VudExpc3QiLCJ0b2dnbGVDaGFubmVsQ29sbGFwc2UiLCJ1c2VDYWxsYmFjayIsInByZXYiLCJyZXNldENvdW50IiwibGlzdCIsInVzZUVmZmVjdCIsImxvZyIsIm9uTWVzc2FnZSIsImRhdGEiLCJjb250ZW50IiwibWF0Y2giLCJmaW5kIiwidiIsInRvU3RyaW5nIiwiQ2hhbm5lbElkIiwib24iLCJoYXNMaXN0ZW5lcnMiLCJvZmYiLCJvbkNsaWNrIiwiY2xhc3NOYW1lIiwiZGF0YS1xYSIsImFyaWEtaGlkZGVuIiwibWFwIiwiY2hhbm5lbCIsImNvdW50Iiwia2V5IiwibmFtZSIsImFjdGl2ZUNsYXNzTmFtZSIsInRvIiwibWVtYmVyRGF0YSIsInVzZVNXUiIsImZldGNoZXIiLCJvbmxpbmVMaXN0Iiwic2V0T25saW5lTGlzdCIsIlNlbmRlcklkIiwibWVtYmVyIiwiaXNPbmxpbmUiLCJpbmNsdWRlcyIsImRhdGEtcWEtcHJlc2VuY2Utc2VsZiIsImRhdGEtcWEtcHJlc2VuY2UtYWN0aXZlIiwiZGF0YS1xYS1wcmVzZW5jZS1kbmQiLCJuaWNrbmFtZSIsIkNyZWF0ZU1lbnUiLCJDbG9zZU1vZGFsQnV0dG9uIiwiTWVudSIsImNsb3NlQnV0dG9uIiwic3R5bGUiLCJzaG93IiwiY2hpbGRyZW4iLCJvbkNsb3NlTW9kYWwiLCJzdG9wUHJvcGFnYXRpb24iLCJlIiwiZGVmYXVsdFByb3BzIiwiQ3JlYXRlTW9kYWwiLCJDaGF0QXJlYSIsIkZvcm0iLCJNZW50aW9uc1RleHRhcmVhIiwiTWVudGlvbnNJbnB1dCIsIlRvb2xib3giLCJTZW5kQnV0dG9uIiwiRWFjaE1lbnRpb24iLCJmb2N1cyIsIm9uU3VibWl0Rm9ybSIsImNoYXQiLCJvbkNoYW5nZUNoYXQiLCJwbGFjZWhvbGRlciIsInRleHRhcmVhUmVmIiwidXNlUmVmIiwiY3VycmVudCIsImF1dG9zaXplIiwib25LZXlkb3duQ2hhdCIsInNoaWZ0S2V5IiwicHJldmVudERlZmF1bHQiLCJyZW5kZXJVc2VyU3VnZ2VzdGlvbiIsInNlYXJjaCIsImhpZ2hsaWdodGVkRGlzcGxheSIsImluZGV4Iiwic3JjIiwiZ3JhdmF0YXIiLCJlbWFpbCIsInMiLCJhbHQiLCJvblN1Ym1pdCIsInZhbHVlIiwib25DaGFuZ2UiLCJvbktleVByZXNzIiwiaW5wdXRSZWYiLCJhbGxvd1N1Z2dlc3Rpb25zQWJvdmVDdXJzb3IiLCJhcHBlbmRTcGFjZU9uQWRkIiwidHJpZ2dlciIsImRpc3BsYXkiLCJyZW5kZXJTdWdnZXN0aW9uIiwidHJpbSIsImFyaWEtbGFiZWwiLCJkYXRhLXNrIiwidHlwZSIsImRpc2FibGVkIiwiQ2hhdFdyYXBwZXIiLCJtZW1vIiwidXNlciIsIlNlbmRlciIsIlVzZXIiLCJyZXN1bHQiLCJ1c2VNZW1vIiwicmVnZXhpZnlTdHJpbmciLCJwYXR0ZXJuIiwiZGVjb3JhdG9yIiwiYXJyIiwiaW5wdXQiLCJmbGV4V3JhcCIsImZsZXgiLCJhbGlnbkl0ZW1zIiwibWFyZ2luUmlnaHQiLCJmb250U2l6ZSIsImRheWpzIiwiY3JlYXRlZEF0IiwiZm9ybWF0IiwibWFyZ2luIiwiQ2hhdFpvbmUiLCJTZWN0aW9uIiwiU3RpY2t5SGVhZGVyIiwic2Nyb2xsYmFyUmVmIiwiaXNSZWFjaGluZ0VuZCIsImlzRW1wdHkiLCJjaGF0U2VjdGlvbnMiLCJzZXRTaXplIiwib25TY3JvbGwiLCJ2YWx1ZXMiLCJzY3JvbGxUb3AiLCJzaXplIiwidGhlbiIsImdldFNjcm9sbEhlaWdodCIsInNjcm9sbEhlaWdodCIsImF1dG9IaWRlIiwicmVmIiwib25TY3JvbGxGcmFtZSIsIk9iamVjdCIsImVudHJpZXMiLCJkYXRlIiwiY2hhdHMiLCJIZWFkZXIiLCJtYWtlU2VjdGlvbiIsImNoYXRMaXN0Iiwic2VjdGlvbnMiLCJmb3JFYWNoIiwibW9udGhEYXRlIiwiQXJyYXkiLCJpc0FycmF5IiwicHVzaCIsInJldmFsaWRhdGUiLCJjaGFubmVsc0RhdGEiLCJjaGF0RGF0YSIsInJldmFsaWRhdGVDaGF0IiwibXV0YXRlIiwibXV0YXRlQ2hhdCIsInVzZVNXUkluZmluaXRlIiwiY2hhbm5lbE1lbWJlcnNEYXRhIiwicmV2YWxpZGF0ZU1lbWJlcnMiLCJzZXRDaGF0IiwidXNlSW5wdXQiLCJuZXdNZW1iZXIiLCJvbkNoYW5nZU5ld01lbWJlciIsInNldE5ld01lbWJlciIsInNob3dJbnZpdGVDaGFubmVsTW9kYWwiLCJzZXRTaG93SW52aXRlQ2hhbm5lbE1vZGFsIiwibGVuZ3RoIiwib25JbnZpdGVNZW1iZXIiLCJheGlvcyIsImNhdGNoIiwiZXJyb3IiLCJkaXIiLCJ0b2FzdCIsInJlc3BvbnNlIiwicG9zaXRpb24iLCJzYXZlZENoYXQiLCJwcmV2Q2hhdERhdGEiLCJ1bnNoaWZ0IiwiVXNlcklkIiwiRGF0ZSIsIkNoYW5uZWwiLCJzY3JvbGxUb0JvdHRvbSIsImdldENsaWVudEhlaWdodCIsImdldFNjcm9sbFRvcCIsImNsb3NlT25DbGljayIsIm9uQ2xpY2tJbnZpdGVDaGFubmVsIiwiY29uY2F0IiwicmV2ZXJzZSIsImhlaWdodCIsImZsZXhGbG93IiwianVzdGlmeUNvbnRlbnQiLCJteURhdGEiLCJSZWNlaXZlcklkIiwiUmVjZWl2ZXIiLCJOdW1iZXIiLCJSaWdodE1lbnUiLCJQcm9maWxlSW1nIiwiUHJvZmlsZU1vZGFsIiwiTG9nT3V0QnV0dG9uIiwiV29ya3NwYWNlV3JhcHBlciIsIldvcmtzcGFjZXMiLCJDaGFubmVscyIsIldvcmtzcGFjZU5hbWUiLCJNZW51U2Nyb2xsIiwiV29ya3NwYWNlTW9kYWwiLCJDaGF0cyIsIkFkZEJ1dHRvbiIsIldvcmtzcGFjZUJ1dHRvbiIsInBhcmFtcyIsInVzZUxvY2F0aW9uIiwidXNlUm91dGVNYXRjaCIsInVzZUhpc3RvcnkiLCJkaXNjb25uZWN0U29ja2V0IiwicmV2YWxpZGF0ZVVzZXIiLCJyZXZhbGlkYXRlQ2hhbm5lbCIsInNob3dDcmVhdGVXb3Jrc3BhY2VNb2RhbCIsInNldFNob3dDcmVhdGVXb3Jrc3BhY2VNb2RhbCIsInNob3dJbnZpdGVXb3Jrc3BhY2VNb2RhbCIsInNldFNob3dJbnZpdGVXb3Jrc3BhY2VNb2RhbCIsInNob3dDcmVhdGVDaGFubmVsTW9kYWwiLCJzZXRTaG93Q3JlYXRlQ2hhbm5lbE1vZGFsIiwic2hvd1VzZXJNZW51Iiwic2V0U2hvd1VzZXJNZW51Iiwic2hvd1dvcmtzcGFjZU1vZGFsIiwic2V0U2hvd1dvcmtzcGFjZU1vZGFsIiwibmV3V29ya3NwYWNlIiwib25DaGFuZ2VOZXdXb3Jrc3BhY2UiLCJzZXROZXdXb3Jrc3BhY2UiLCJuZXdVcmwiLCJvbkNoYW5nZU5ld1VybCIsInNldE5ld1VybCIsIm5ld0NoYW5uZWwiLCJvbkNoYW5nZU5ld0NoYW5uZWwiLCJzZXROZXdDaGFubmVsIiwib25Mb2dPdXQiLCJvbkNyZWF0ZVdvcmtzcGFjZSIsInVybCIsIm9uQ3JlYXRlQ2hhbm5lbCIsIm9uQ2xpY2tDcmVhdGVXb3Jrc3BhY2UiLCJvbkNsaWNrQWRkQ2hhbm5lbCIsIm9uQ2xpY2tJbnZpdGVXb3Jrc3BhY2UiLCJvbkNsaWNrVXNlclByb2ZpbGUiLCJ0b2dnbGVXb3Jrc3BhY2VNb2RhbCIsImVtaXQiLCJjaGFubmVscyIsInJpZ2h0IiwidG9wIiwid3MiLCJzbGljZSIsInRvVXBwZXJDYXNlIiwibGVmdCIsInBhdGgiLCJjb21wb25lbnQiLCJEaXJlY3RNZXNzYWdlIl0sIm1hcHBpbmdzIjoidUtBRUEsTUFFTUEsRUFBb0QsR0FvQjFELEVBbkJtQkMsSUFDakIsSUFBS0EsRUFDSCxNQUFPLE1BQUNDLEVBQVdDLEdBUXJCLFNBQVNBLElBQ0hGLEdBQWFELEVBQVFDLEtBQ3ZCRCxFQUFRQyxHQUFXRSxvQkFDWkgsRUFBUUMsSUFHbkIsT0FaS0QsRUFBUUMsS0FDWEQsRUFBUUMsR0FBYUcsSUFBSSxrQ0FBZ0JILEVBQWEsQ0FDcERJLFdBQVksQ0FBQyxlQUVmQyxRQUFRQyxLQUFLLGdCQUFpQk4sRUFBV0QsRUFBUUMsR0FBV08sS0FRdkQsQ0FBQ1IsRUFBUUMsR0FBWUUsSSxjQ25CdkIsTUFBTU0sR0FBaUIsaUJBQUgsb0JBQUcsQ0FBSCx3S0FZdkIsRUFBR0MsY0FDSEEsR0FDQyxrREFkc0IsSyxrQ0NVM0IsTUF3RkEsRUF4RitCLEVBQUdDLFdBQVVDLGtCQUMxQyxNQUFNLFVBQUVYLElBQWNZLFdBQ2ZDLEdBQVVDLEVBQVVkLElBQ3BCZSxFQUFpQkMsSUFBc0JDLGVBQVMsSUFDaERDLEVBQVdDLElBQWdCRixjQUFnRCxJQUU1RUcsR0FBd0JDLGtCQUFZLEtBQ3hDTCxHQUFvQk0sSUFBVUEsTUFDN0IsSUFFR0MsR0FBYUYsa0JBQ2hCZCxHQUFPLEtBQ05ZLEdBQWNLLElBQ0wsSUFDRkEsRUFDSCxDQUFDakIsUUFBS04sUUFJWixLQUdGd0IsZ0JBQVUsS0FDUnBCLFFBQVFxQixJQUFJLGdCQUFpQjFCLEdBQzdCbUIsRUFBYSxNQUNaLENBQUNuQixJQUVKLE1BQU0yQixFQUFh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Z0I4RSxTQUFTLHFCIiwiZmlsZSI6IjY1MC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBpbyBmcm9tICdzb2NrZXQuaW8tY2xpZW50JztcblxuY29uc3QgYmFja1VybCA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicgPyAnaHR0cHM6Ly9zbGVhY3Qubm9kZWJpcmQuY29tJyA6ICdodHRwOi8vbG9jYWxob3N0OjMwOTUnO1xuXG5jb25zdCBzb2NrZXRzOiB7IFtrZXk6IHN0cmluZ106IFNvY2tldElPQ2xpZW50LlNvY2tldCB9ID0ge307XG5jb25zdCB1c2VTb2NrZXQgPSAod29ya3NwYWNlPzogc3RyaW5nKTogW1NvY2tldElPQ2xpZW50LlNvY2tldCB8IHVuZGVmaW5lZCwgKCkgPT4gdm9pZF0gPT4ge1xuICBpZiAoIXdvcmtzcGFjZSkge1xuICAgIHJldHVybiBbdW5kZWZpbmVkLCBkaXNjb25uZWN0XTtcbiAgfVxuICBpZiAoIXNvY2tldHNbd29ya3NwYWNlXSkge1xuICAgIHNvY2tldHNbd29ya3NwYWNlXSA9IGlvKGAke2JhY2tVcmx9L3dzLSR7d29ya3NwYWNlfWAsIHtcbiAgICAgIHRyYW5zcG9ydHM6IFsnd2Vic29ja2V0J10sXG4gICAgfSk7XG4gICAgY29uc29sZS5pbmZvKCdjcmVhdGUgc29ja2V0Jywgd29ya3NwYWNlLCBzb2NrZXRzW3dvcmtzcGFjZV0uaWQpO1xuICB9XG4gIGZ1bmN0aW9uIGRpc2Nvbm5lY3QoKSB7XG4gICAgaWYgKHdvcmtzcGFjZSAmJiBzb2NrZXRzW3dvcmtzcGFjZV0pIHtcbiAgICAgIHNvY2tldHNbd29ya3NwYWNlXS5kaXNjb25uZWN0KCk7XG4gICAgICBkZWxldGUgc29ja2V0c1t3b3Jrc3BhY2VdO1xuICAgIH1cbiAgfVxuICByZXR1cm4gW3NvY2tldHNbd29ya3NwYWNlXSwgZGlzY29ubmVjdF07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VTb2NrZXQ7XG4iLCJpbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XHJcblxyXG5leHBvcnQgY29uc3QgQ29sbGFwc2VCdXR0b24gPSBzdHlsZWQuYnV0dG9uPHsgY29sbGFwc2U6IGJvb2xlYW4gfT5gXHJcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIHdpZHRoOiAyNnB4O1xyXG4gIGhlaWdodDogMjZweDtcclxuICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBtYXJnaW4tbGVmdDogMTBweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG4gICR7KHsgY29sbGFwc2UgfSkgPT5cclxuICAgIGNvbGxhcHNlICYmXHJcbiAgICBgXHJcbiAgICAmIGkge1xyXG4gICAgICB0cmFuc2Zvcm06IG5vbmU7XHJcbiAgICB9XHJcbiAgYH07XHJcbmA7XHJcbiIsImltcG9ydCB1c2VTb2NrZXQgZnJvbSAnQGhvb2tzL3VzZVNvY2tldCc7XHJcbmltcG9ydCB7IENvbGxhcHNlQnV0dG9uIH0gZnJvbSAnQGNvbXBvbmVudHMvRE1MaXN0L3N0eWxlcyc7XHJcbmltcG9ydCB7IElDaGFubmVsLCBJQ2hhdCwgSVVzZXIgfSBmcm9tICdAdHlwaW5ncy9kYic7XHJcbmltcG9ydCBSZWFjdCwgeyBGQywgdXNlQ2FsbGJhY2ssIHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHVzZVBhcmFtcyB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XHJcbmltcG9ydCB7IE5hdkxpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcclxuXHJcbmludGVyZmFjZSBQcm9wcyB7XHJcbiAgY2hhbm5lbERhdGE/OiBJQ2hhbm5lbFtdO1xyXG4gIHVzZXJEYXRhPzogSVVzZXI7XHJcbn1cclxuXHJcbmNvbnN0IENoYW5uZWxMaXN0OiBGQzxQcm9wcz4gPSAoeyB1c2VyRGF0YSwgY2hhbm5lbERhdGEgfSkgPT4ge1xyXG4gIGNvbnN0IHsgd29ya3NwYWNlIH0gPSB1c2VQYXJhbXM8eyB3b3Jrc3BhY2U/OiBzdHJpbmcgfT4oKTtcclxuICBjb25zdCBbc29ja2V0XSA9IHVzZVNvY2tldCh3b3Jrc3BhY2UpO1xyXG4gIGNvbnN0IFtjaGFubmVsQ29sbGFwc2UsIHNldENoYW5uZWxDb2xsYXBzZV0gPSB1c2VTdGF0ZShmYWxzZSk7XHJcbiAgY29uc3QgW2NvdW50TGlzdCwgc2V0Q291bnRMaXN0XSA9IHVzZVN0YXRlPHsgW2tleTogc3RyaW5nXTogbnVtYmVyIHwgdW5kZWZpbmVkIH0+KHt9KTtcclxuXHJcbiAgY29uc3QgdG9nZ2xlQ2hhbm5lbENvbGxhcHNlID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xyXG4gICAgc2V0Q2hhbm5lbENvbGxhcHNlKChwcmV2KSA9PiAhcHJldik7XHJcbiAgfSwgW10pO1xyXG5cclxuICBjb25zdCByZXNldENvdW50ID0gdXNlQ2FsbGJhY2soXHJcbiAgICAoaWQpID0+ICgpID0+IHtcclxuICAgICAgc2V0Q291bnRMaXN0KChsaXN0KSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIC4uLmxpc3QsXHJcbiAgICAgICAgICBbaWRdOiB1bmRlZmluZWQsXHJcbiAgICAgICAgfTtcclxuICAgICAgfSk7XHJcbiAgICB9LFxyXG4gICAgW10sXHJcbiAgKTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKCd3b3Jrc3BhY2Ug67CU6ryI64ukJywgd29ya3NwYWNlKTtcclxuICAgIHNldENvdW50TGlzdCh7fSk7XHJcbiAgfSwgW3dvcmtzcGFjZV0pO1xyXG5cclxuICBjb25zdCBvbk1lc3NhZ2UgPSAoZGF0YTogSUNoYXQpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKCdtZXNzYWdl7JmU64ukJywgZGF0YSk7XHJcbiAgICBjb25zdCBtZW50aW9uczogc3RyaW5nW10gfCBudWxsID0gZGF0YS5jb250ZW50Lm1hdGNoKC9AXFxbKC4rPylcXF1cXCgoXFxkKVxcKS9nKTtcclxuICAgIGlmIChtZW50aW9ucz8uZmluZCgodikgPT4gdi5tYXRjaCgvQFxcWyguKz8pXFxdXFwoKFxcZClcXCkvKSFbMl0gPT09IHVzZXJEYXRhPy5pZC50b1N0cmluZygpKSkge1xyXG4gICAgICByZXR1cm4gc2V0Q291bnRMaXN0KChsaXN0KSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIC4uLmxpc3QsXHJcbiAgICAgICAgICBbYGMtJHtkYXRhLkNoYW5uZWxJZH1gXTogKGxpc3RbYGMtJHtkYXRhLkNoYW5uZWxJZH1gXSB8fCAwKSArIDEsXHJcbiAgICAgICAgfTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBzZXRDb3VudExpc3QoKGxpc3QpID0+IHtcclxuICAgICAgcmV0dXJuIHtcclxuICAgICAgICAuLi5saXN0LFxyXG4gICAgICAgIFtgYy0ke2RhdGEuQ2hhbm5lbElkfWBdOiBsaXN0W2BjLSR7ZGF0YS5DaGFubmVsSWR9YF0gfHwgMCxcclxuICAgICAgfTtcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBzb2NrZXQ/Lm9uKCdtZXNzYWdlJywgb25NZXNzYWdlKTtcclxuICAgIGNvbnNvbGUubG9nKCdzb2NrZXQgb24gbWVzc2FnZScsIHNvY2tldD8uaGFzTGlzdGVuZXJzKCdtZXNzYWdlJyksIHNvY2tldCk7XHJcbiAgICByZXR1cm4gKCkgPT4ge1xyXG4gICAgICBzb2NrZXQ/Lm9mZignbWVzc2FnZScsIG9uTWVzc2FnZSk7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdzb2NrZXQgb2ZmIG1lc3NhZ2UnLCBzb2NrZXQ/Lmhhc0xpc3RlbmVycygnbWVzc2FnZScpKTtcclxuICAgIH07XHJcbiAgfSwgW3NvY2tldCwgdXNlckRhdGFdKTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDw+XHJcbiAgICAgIDxoMj5cclxuICAgICAgICA8Q29sbGFwc2VCdXR0b24gY29sbGFwc2U9e2NoYW5uZWxDb2xsYXBzZX0gb25DbGljaz17dG9nZ2xlQ2hhbm5lbENvbGxhcHNlfT5cclxuICAgICAgICAgIDxpXHJcbiAgICAgICAgICAgIGNsYXNzTmFtZT1cImMtaWNvbiBwLWNoYW5uZWxfc2lkZWJhcl9fc2VjdGlvbl9oZWFkaW5nX2V4cGFuZCBwLWNoYW5uZWxfc2lkZWJhcl9fc2VjdGlvbl9oZWFkaW5nX2V4cGFuZC0tc2hvd19tb3JlX2ZlYXR1cmUgYy1pY29uLS1jYXJldC1yaWdodCBjLWljb24tLWluaGVyaXQgYy1pY29uLS1pbmxpbmVcIlxyXG4gICAgICAgICAgICBkYXRhLXFhPVwiY2hhbm5lbC1zZWN0aW9uLWNvbGxhcHNlXCJcclxuICAgICAgICAgICAgYXJpYS1oaWRkZW49XCJ0cnVlXCJcclxuICAgICAgICAgIC8+XHJcbiAgICAgICAgPC9Db2xsYXBzZUJ1dHRvbj5cclxuICAgICAgICA8c3Bhbj5DaGFubmVsczwvc3Bhbj5cclxuICAgICAgPC9oMj5cclxuICAgICAgPGRpdj5cclxuICAgICAgICB7IWNoYW5uZWxDb2xsYXBzZSAmJlxyXG4gICAgICAgICAgY2hhbm5lbERhdGE/Lm1hcCgoY2hhbm5lbCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBjb3VudCA9IGNvdW50TGlzdFtgYy0ke2NoYW5uZWwuaWR9YF07XHJcbiAgICAgICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgICAgPE5hdkxpbmtcclxuICAgICAgICAgICAgICAgIGtleT17Y2hhbm5lbC5uYW1lfVxyXG4gICAgICAgICAgICAgICAgYWN0aXZlQ2xhc3NOYW1lPVwic2VsZWN0ZWRcIlxyXG4gICAgICAgICAgICAgICAgdG89e2Avd29ya3NwYWNlLyR7d29ya3NwYWNlfS9jaGFubmVsLyR7Y2hhbm5lbC5uYW1lfWB9XHJcbiAgICAgICAgICAgICAgICBvbkNsaWNrPXtyZXNldENvdW50KGBjLSR7Y2hhbm5lbC5pZH1gKX1cclxuICAgICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9e2NvdW50ICE9PSB1bmRlZmluZWQgJiYgY291bnQgPj0gMCA/ICdib2xkJyA6IHVuZGVmaW5lZH0+IyB7Y2hhbm5lbC5uYW1lfTwvc3Bhbj5cclxuICAgICAgICAgICAgICAgIHtjb3VudCAhPT0gdW5kZWZpbmVkICYmIGNvdW50ID4gMCAmJiA8c3BhbiBjbGFzc05hbWU9XCJjb3VudFwiPntjb3VudH08L3NwYW4+fVxyXG4gICAgICAgICAgICAgIDwvTmF2TGluaz5cclxuICAgICAgICAgICAgKTtcclxuICAgICAgICAgIH0pfVxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDaGFubmVsTGlzdDtcclxuIiwiaW1wb3J0IHVzZVNvY2tldCBmcm9tICdAaG9va3MvdXNlU29ja2V0JztcclxuaW1wb3J0IHsgQ29sbGFwc2VCdXR0b24gfSBmcm9tICdAY29tcG9uZW50cy9ETUxpc3Qvc3R5bGVzJztcclxuaW1wb3J0IHsgSURNLCBJVXNlciwgSVVzZXJXaXRoT25saW5lIH0gZnJvbSAnQHR5cGluZ3MvZGInO1xyXG5pbXBvcnQgZmV0Y2hlciBmcm9tICdAdXRpbHMvZmV0Y2hlcic7XHJcbmltcG9ydCBSZWFjdCwgeyBGQywgdXNlQ2FsbGJhY2ssIHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHVzZVBhcmFtcyB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XHJcbmltcG9ydCB7IE5hdkxpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcclxuaW1wb3J0IHVzZVNXUiBmcm9tICdzd3InO1xyXG5cclxuaW50ZXJmYWNlIFByb3BzIHtcclxuICB1c2VyRGF0YT86IElVc2VyO1xyXG59XHJcblxyXG5jb25zdCBETUxpc3Q6IEZDPFByb3BzPiA9ICh7IHVzZXJEYXRhIH0pID0+IHtcclxuICBjb25zdCB7IHdvcmtzcGFjZSB9ID0gdXNlUGFyYW1zPHsgd29ya3NwYWNlPzogc3RyaW5nIH0+KCk7XHJcbiAgY29uc3QgeyBkYXRhOiBtZW1iZXJEYXRhIH0gPSB1c2VTV1I8SVVzZXJXaXRoT25saW5lW10+KFxyXG4gICAgdXNlckRhdGEgPyBgL2FwaS93b3Jrc3BhY2UvJHt3b3Jrc3BhY2V9L21lbWJlcnNgIDogbnVsbCxcclxuICAgIGZldGNoZXIsXHJcbiAgKTtcclxuICBjb25zdCBbc29ja2V0XSA9IHVzZVNvY2tldCh3b3Jrc3BhY2UpO1xyXG4gIGNvbnN0IFtjaGFubmVsQ29sbGFwc2UsIHNldENoYW5uZWxDb2xsYXBzZV0gPSB1c2VTdGF0ZShmYWxzZSk7XHJcbiAgY29uc3QgW2NvdW50TGlzdCwgc2V0Q291bnRMaXN0XSA9IHVzZVN0YXRlPHsgW2tleTogc3RyaW5nXTogbnVtYmVyIH0+KHt9KTtcclxuICBjb25zdCBbb25saW5lTGlzdCwgc2V0T25saW5lTGlzdF0gPSB1c2VTdGF0ZTxudW1iZXJbXT4oW10pO1xyXG5cclxuICBjb25zdCB0b2dnbGVDaGFubmVsQ29sbGFwc2UgPSB1c2VDYWxsYmFjaygoKSA9PiB7XHJcbiAgICBzZXRDaGFubmVsQ29sbGFwc2UoKHByZXYpID0+ICFwcmV2KTtcclxuICB9LCBbXSk7XHJcblxyXG4gIGNvbnN0IHJlc2V0Q291bnQgPSB1c2VDYWxsYmFjayhcclxuICAgIChpZCkgPT4gKCkgPT4ge1xyXG4gICAgICBzZXRDb3VudExpc3QoKGxpc3QpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgLi4ubGlzdCxcclxuICAgICAgICAgIFtpZF06IDAsXHJcbiAgICAgICAgfTtcclxuICAgICAgfSk7XHJcbiAgICB9LFxyXG4gICAgW10sXHJcbiAgKTtcclxuXHJcbiAgY29uc3Qgb25NZXNzYWdlID0gKGRhdGE6IElETSkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coJ2Rt7JmU64ukJywgZGF0YSk7XHJcbiAgICBzZXRDb3VudExpc3QoKGxpc3QpID0+IHtcclxuICAgICAgcmV0dXJuIHtcclxuICAgICAgICAuLi5saXN0LFxyXG4gICAgICAgIFtkYXRhLlNlbmRlcklkXTogbGlzdFtkYXRhLlNlbmRlcklkXSA/IGxpc3RbZGF0YS5TZW5kZXJJZF0gKyAxIDogMSxcclxuICAgICAgfTtcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZygnd29ya3NwYWNlIOuwlOq8iOuLpCcsIHdvcmtzcGFjZSk7XHJcbiAgICBzZXRPbmxpbmVMaXN0KFtdKTtcclxuICAgIHNldENvdW50TGlzdCh7fSk7XHJcbiAgfSwgW3dvcmtzcGFjZV0pO1xyXG5cclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgc29ja2V0Py5vbignb25saW5lTGlzdCcsIChkYXRhOiBudW1iZXJbXSkgPT4ge1xyXG4gICAgICBzZXRPbmxpbmVMaXN0KGRhdGEpO1xyXG4gICAgfSk7XHJcbiAgICBzb2NrZXQ/Lm9uKCdkbScsIG9uTWVzc2FnZSk7XHJcbiAgICBjb25zb2xlLmxvZygnc29ja2V0IG9uIGRtJywgc29ja2V0Py5oYXNMaXN0ZW5lcnMoJ2RtJyksIHNvY2tldCk7XHJcbiAgICByZXR1cm4gKCkgPT4ge1xyXG4gICAgICBzb2NrZXQ/Lm9mZignZG0nLCBvbk1lc3NhZ2UpO1xyXG4gICAgICBjb25zb2xlLmxvZygnc29ja2V0IG9mZiBkbScsIHNvY2tldD8uaGFzTGlzdGVuZXJzKCdkbScpKTtcclxuICAgICAgc29ja2V0Py5vZmYoJ29ubGluZUxpc3QnKTtcclxuICAgIH07XHJcbiAgfSwgW3NvY2tldF0pO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPGgyPlxyXG4gICAgICAgIDxDb2xsYXBzZUJ1dHRvbiBjb2xsYXBzZT17Y2hhbm5lbENvbGxhcHNlfSBvbkNsaWNrPXt0b2dnbGVDaGFubmVsQ29sbGFwc2V9PlxyXG4gICAgICAgICAgPGlcclxuICAgICAgICAgICAgY2xhc3NOYW1lPVwiYy1pY29uIHAtY2hhbm5lbF9zaWRlYmFyX19zZWN0aW9uX2hlYWRpbmdfZXhwYW5kIHAtY2hhbm5lbF9zaWRlYmFyX19zZWN0aW9uX2hlYWRpbmdfZXhwYW5kLS1zaG93X21vcmVfZmVhdHVyZSBjLWljb24tLWNhcmV0LXJpZ2h0IGMtaWNvbi0taW5oZXJpdCBjLWljb24tLWlubGluZVwiXHJcbiAgICAgICAgICAgIGRhdGEtcWE9XCJjaGFubmVsLXNlY3Rpb24tY29sbGFwc2VcIlxyXG4gICAgICAgICAgICBhcmlhLWhpZGRlbj1cInRydWVcIlxyXG4gICAgICAgICAgLz5cclxuICAgICAgICA8L0NvbGxhcHNlQnV0dG9uPlxyXG4gICAgICAgIDxzcGFuPkRpcmVjdCBNZXNzYWdlczwvc3Bhbj5cclxuICAgICAgPC9oMj5cclxuICAgICAgPGRpdj5cclxuICAgICAgICB7IWNoYW5uZWxDb2xsYXBzZSAmJlxyXG4gICAgICAgICAgbWVtYmVyRGF0YT8ubWFwKChtZW1iZXIpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgaXNPbmxpbmUgPSBvbmxpbmVMaXN0LmluY2x1ZGVzKG1lbWJlci5pZCk7XHJcbiAgICAgICAgICAgIGNvbnN0IGNvdW50ID0gY291bnRMaXN0W21lbWJlci5pZF0gfHwgMDtcclxuICAgICAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgICA8TmF2TGlua1xyXG4gICAgICAgICAgICAgICAga2V5PXttZW1iZXIuaWR9XHJcbiAgICAgICAgICAgICAgICBhY3RpdmVDbGFzc05hbWU9XCJzZWxlY3RlZFwiXHJcbiAgICAgICAgICAgICAgICB0bz17YC93b3Jrc3BhY2UvJHt3b3Jrc3BhY2V9L2RtLyR7bWVtYmVyLmlkfWB9XHJcbiAgICAgICAgICAgICAgICBvbkNsaWNrPXtyZXNldENvdW50KG1lbWJlci5pZCl9XHJcbiAgICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAgPGlcclxuICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtgYy1pY29uIHAtY2hhbm5lbF9zaWRlYmFyX19wcmVzZW5jZV9pY29uIHAtY2hhbm5lbF9zaWRlYmFyX19wcmVzZW5jZV9pY29uLS1kaW1fZW5hYmxlZCBjLXByZXNlbmNlICR7XHJcbiAgICAgICAgICAgICAgICAgICAgaXNPbmxpbmUgPyAnYy1wcmVzZW5jZS0tYWN0aXZlIGMtaWNvbi0tcHJlc2VuY2Utb25saW5lJyA6ICdjLWljb24tLXByZXNlbmNlLW9mZmxpbmUnXHJcbiAgICAgICAgICAgICAgICAgIH1gfVxyXG4gICAgICAgICAgICAgICAgICBhcmlhLWhpZGRlbj1cInRydWVcIlxyXG4gICAgICAgICAgICAgICAgICBkYXRhLXFhPVwicHJlc2VuY2VfaW5kaWNhdG9yXCJcclxuICAgICAgICAgICAgICAgICAgZGF0YS1xYS1wcmVzZW5jZS1zZWxmPVwiZmFsc2VcIlxyXG4gICAgICAgICAgICAgICAgICBkYXRhLXFhLXByZXNlbmNlLWFjdGl2ZT1cImZhbHNlXCJcclxuICAgICAgICAgICAgICAgICAgZGF0YS1xYS1wcmVzZW5jZS1kbmQ9XCJmYWxzZVwiXHJcbiAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPXtjb3VudCA+IDAgPyAnYm9sZCcgOiB1bmRlZmluZWR9PnttZW1iZXIubmlja25hbWV9PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAge21lbWJlci5pZCA9PT0gdXNlckRhdGE/LmlkICYmIDxzcGFuPiAo64KYKTwvc3Bhbj59XHJcbiAgICAgICAgICAgICAgICB7Y291bnQgPiAwICYmIDxzcGFuIGNsYXNzTmFtZT1cImNvdW50XCI+e2NvdW50fTwvc3Bhbj59XHJcbiAgICAgICAgICAgICAgPC9OYXZMaW5rPlxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgICAgfSl9XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgPC8+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IERNTGlzdDtcclxuIiwiaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuXG5leHBvcnQgY29uc3QgQ3JlYXRlTWVudSA9IHN0eWxlZC5kaXZgXG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgbGVmdDogMDtcbiAgYm90dG9tOiAwO1xuICB6LWluZGV4OiAxMDAwO1xuXG4gICYgPiBkaXYge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgLS1zYWYtMDogcmdiYSh2YXIoLS1za19mb3JlZ3JvdW5kX2xvdywgMjksIDI4LCAyOSksIDAuMTMpO1xuICAgIGJveC1zaGFkb3c6IDAgMCAwIDFweCB2YXIoLS1zYWYtMCksIDAgNHB4IDEycHggMCByZ2JhKDAsIDAsIDAsIDAuMTIpO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEodmFyKC0tc2tfZm9yZWdyb3VuZF9taW5fc29saWQsIDI0OCwgMjQ4LCAyNDgpLCAxKTtcbiAgICBib3JkZXItcmFkaXVzOiA2cHg7XG4gICAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgbWluLXdpZHRoOiAzNjBweDtcbiAgICB6LWluZGV4OiA1MTI7XG4gICAgbWF4LWhlaWdodDogY2FsYygxMDB2aCAtIDIwcHgpO1xuICAgIGNvbG9yOiByZ2IoMjksIDI4LCAyOSk7XG4gIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBDbG9zZU1vZGFsQnV0dG9uID0gc3R5bGVkLmJ1dHRvbmBcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMTBweDtcbiAgdG9wOiA2cHg7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IG5vbmU7XG4gIGZvbnQtc2l6ZTogMzBweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuYDtcbiIsImltcG9ydCB7IENyZWF0ZU1lbnUsIENsb3NlTW9kYWxCdXR0b24gfSBmcm9tICdAY29tcG9uZW50cy9NZW51L3N0eWxlcyc7XG5pbXBvcnQgUmVhY3QsIHsgQ1NTUHJvcGVydGllcywgRkMsIFByb3BzV2l0aENoaWxkcmVuLCB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgc2hvdzogYm9vbGVhbjtcbiAgb25DbG9zZU1vZGFsOiAoKSA9PiB2b2lkO1xuICBzdHlsZTogQ1NTUHJvcGVydGllcztcbiAgY2xvc2VCdXR0b24/OiBib29sZWFuO1xufVxuXG5jb25zdCBNZW51OiBGQzxQcm9wc1dpdGhDaGlsZHJlbjxQcm9wcz4+ID0gKHsgY2xvc2VCdXR0b24sIHN0eWxlLCBzaG93LCBjaGlsZHJlbiwgb25DbG9zZU1vZGFsIH0pID0+IHtcbiAgY29uc3Qgc3RvcFByb3BhZ2F0aW9uID0gdXNlQ2FsbGJhY2soKGUpID0+IHtcbiAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICB9LCBbXSk7XG5cbiAgaWYgKCFzaG93KSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgcmV0dXJuIChcbiAgICA8Q3JlYXRlTWVudSBvbkNsaWNrPXtvbkNsb3NlTW9kYWx9PlxuICAgICAgPGRpdiBvbkNsaWNrPXtzdG9wUHJvcGFnYXRpb259IHN0eWxlPXtzdHlsZX0+XG4gICAgICAgIHtjbG9zZUJ1dHRvbiAmJiA8Q2xvc2VNb2RhbEJ1dHRvbiBvbkNsaWNrPXtvbkNsb3NlTW9kYWx9PiZ0aW1lczs8L0Nsb3NlTW9kYWxCdXR0b24+fVxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L2Rpdj5cbiAgICA8L0NyZWF0ZU1lbnU+XG4gICk7XG59O1xuTWVudS5kZWZhdWx0UHJvcHMgPSB7XG4gIGNsb3NlQnV0dG9uOiB0cnVlLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgTWVudTtcbiIsImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcblxuZXhwb3J0IGNvbnN0IENyZWF0ZU1vZGFsID0gc3R5bGVkLmRpdmBcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGxlZnQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgei1pbmRleDogMTAyMjtcblxuICAmID4gZGl2IHtcbiAgICBtYXJnaW4tdG9wOiAyMDBweDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDQ0MHB4O1xuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgIC0tc2FmLTA6IHJnYmEodmFyKC0tc2tfZm9yZWdyb3VuZF9sb3csIDI5LCAyOCwgMjkpLCAwLjEzKTtcbiAgICBib3gtc2hhZG93OiAwIDAgMCAxcHggdmFyKC0tc2FmLTApLCAwIDRweCAxMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjEyKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKHZhcigtLXNrX2ZvcmVncm91bmRfbWluX3NvbGlkLCAyNDgsIDI0OCwgMjQ4KSwgMSk7XG4gICAgYm9yZGVyLXJhZGl1czogNnB4O1xuICAgIHVzZXItc2VsZWN0OiBub25lO1xuICAgIG1heC13aWR0aDogNDQwcHg7XG4gICAgcGFkZGluZzogMzBweCA0MHB4IDA7XG4gICAgei1pbmRleDogMTAxMjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBDbG9zZU1vZGFsQnV0dG9uID0gc3R5bGVkLmJ1dHRvbmBcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMTBweDtcbiAgdG9wOiA2cHg7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IG5vbmU7XG4gIGZvbnQtc2l6ZTogMzBweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuYDtcbiIsImltcG9ydCB7IENyZWF0ZU1vZGFsLCBDbG9zZU1vZGFsQnV0dG9uIH0gZnJvbSAnQGNvbXBvbmVudHMvTW9kYWwvc3R5bGVzJztcbmltcG9ydCBSZWFjdCwgeyBGQywgUHJvcHNXaXRoQ2hpbGRyZW4sIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBzaG93OiBib29sZWFuO1xuICBvbkNsb3NlTW9kYWw6ICgpID0+IHZvaWQ7XG59XG5cbmNvbnN0IE1vZGFsOiBGQzxQcm9wc1dpdGhDaGlsZHJlbjxQcm9wcz4+ID0gKHsgc2hvdywgY2hpbGRyZW4sIG9uQ2xvc2VNb2RhbCB9KSA9PiB7XG4gIGNvbnN0IHN0b3BQcm9wYWdhdGlvbiA9IHVzZUNhbGxiYWNrKChlKSA9PiB7XG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgfSwgW10pO1xuXG4gIGlmICghc2hvdykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHJldHVybiAoXG4gICAgPENyZWF0ZU1vZGFsIG9uQ2xpY2s9e29uQ2xvc2VNb2RhbH0+XG4gICAgICA8ZGl2IG9uQ2xpY2s9e3N0b3BQcm9wYWdhdGlvbn0+XG4gICAgICAgIDxDbG9zZU1vZGFsQnV0dG9uIG9uQ2xpY2s9e29uQ2xvc2VNb2RhbH0+JnRpbWVzOzwvQ2xvc2VNb2RhbEJ1dHRvbj5cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgPC9kaXY+XG4gICAgPC9DcmVhdGVNb2RhbD5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IE1vZGFsO1xuIiwiaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgTWVudGlvbnNJbnB1dCB9IGZyb20gJ3JlYWN0LW1lbnRpb25zJztcblxuZXhwb3J0IGNvbnN0IENoYXRBcmVhID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZmxleDtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIHBhZGRpbmctdG9wOiAwO1xuYDtcblxuZXhwb3J0IGNvbnN0IEZvcm0gPSBzdHlsZWQuZm9ybWBcbiAgY29sb3I6IHJnYigyOSwgMjgsIDI5KTtcbiAgZm9udC1zaXplOiAxNXB4O1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2IoMjksIDI4LCAyOSk7XG5gO1xuXG5leHBvcnQgY29uc3QgTWVudGlvbnNUZXh0YXJlYSA9IHN0eWxlZChNZW50aW9uc0lucHV0KWBcbiAgZm9udC1mYW1pbHk6IFNsYWNrLUxhdG8sIGFwcGxlTG9nbywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxNXB4O1xuICBwYWRkaW5nOiA4cHggOXB4O1xuXG4gICYgc3Ryb25nIHtcbiAgICBiYWNrZ3JvdW5kOiBza3libHVlO1xuICB9XG5cbiAgJiB0ZXh0YXJlYSB7XG4gICAgaGVpZ2h0OiA0NHB4O1xuICAgIHBhZGRpbmc6IDlweCAxMHB4ICFpbXBvcnRhbnQ7XG4gICAgb3V0bGluZTogbm9uZSAhaW1wb3J0YW50O1xuICAgIGJvcmRlci1yYWRpdXM6IDRweCAhaW1wb3J0YW50O1xuICAgIHJlc2l6ZTogbm9uZSAhaW1wb3J0YW50O1xuICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICAgIGJvcmRlcjogbm9uZTtcbiAgfVxuXG4gICYgdWwge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIGxpZ2h0Z3JheTtcbiAgICBtYXgtaGVpZ2h0OiAyMDBweDtcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xuICAgIHBhZGRpbmc6IDlweCAxMHB4O1xuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICB3aWR0aDogMTUwcHg7XG4gIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBUb29sYm94ID0gc3R5bGVkLmRpdmBcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBiYWNrZ3JvdW5kOiByZ2IoMjQ4LCAyNDgsIDI0OCk7XG4gIGhlaWdodDogNDFweDtcbiAgZGlzcGxheTogZmxleDtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHJnYigyMjEsIDIyMSwgMjIxKTtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogNHB4O1xuICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogNHB4O1xuYDtcblxuZXhwb3J0IGNvbnN0IFNlbmRCdXR0b24gPSBzdHlsZWQuYnV0dG9uYFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiA1cHg7XG4gIHRvcDogNXB4O1xuYDtcblxuZXhwb3J0IGNvbnN0IEVhY2hNZW50aW9uID0gc3R5bGVkLmJ1dHRvbjx7IGZvY3VzOiBib29sZWFuIH0+YFxuICBwYWRkaW5nOiA0cHggMjBweDtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogbm9uZTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgY29sb3I6IHJnYigyOCwgMjksIDI4KTtcbiAgd2lkdGg6IDEwMCU7XG5cbiAgJiBpbWcge1xuICAgIG1hcmdpbi1yaWdodDogNXB4O1xuICB9XG5cbiAgJHsoeyBmb2N1cyB9KSA9PlxuICAgIGZvY3VzICYmXG4gICAgYFxuICAgIGJhY2tncm91bmQ6ICMxMjY0YTM7XG4gICAgY29sb3I6IHdoaXRlO1xuICBgfTtcbmA7XG4iLCJpbXBvcnQgeyBDaGF0QXJlYSwgRm9ybSwgTWVudGlvbnNUZXh0YXJlYSwgU2VuZEJ1dHRvbiwgVG9vbGJveCwgRWFjaE1lbnRpb24gfSBmcm9tICdAY29tcG9uZW50cy9DaGF0Qm94L3N0eWxlcyc7XHJcbmltcG9ydCB7IElVc2VyIH0gZnJvbSAnQHR5cGluZ3MvZGInO1xyXG5pbXBvcnQgYXV0b3NpemUgZnJvbSAnYXV0b3NpemUnO1xyXG5pbXBvcnQgZ3JhdmF0YXIgZnJvbSAnZ3JhdmF0YXInO1xyXG5pbXBvcnQgUmVhY3QsIHsgRkMsIHVzZUNhbGxiYWNrLCB1c2VFZmZlY3QsIHVzZVJlZiB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgTWVudGlvbiwgU3VnZ2VzdGlvbkRhdGFJdGVtIH0gZnJvbSAncmVhY3QtbWVudGlvbnMnO1xyXG5cclxuaW50ZXJmYWNlIFByb3BzIHtcclxuICBvblN1Ym1pdEZvcm06IChlOiBhbnkpID0+IHZvaWQ7XHJcbiAgY2hhdD86IHN0cmluZztcclxuICBvbkNoYW5nZUNoYXQ6IChlOiBhbnkpID0+IHZvaWQ7XHJcbiAgcGxhY2Vob2xkZXI6IHN0cmluZztcclxuICBkYXRhPzogSVVzZXJbXTtcclxufVxyXG5jb25zdCBDaGF0Qm94OiBGQzxQcm9wcz4gPSAoeyBvblN1Ym1pdEZvcm0sIGNoYXQsIG9uQ2hhbmdlQ2hhdCwgcGxhY2Vob2xkZXIsIGRhdGEgfSkgPT4ge1xyXG4gIGNvbnN0IHRleHRhcmVhUmVmID0gdXNlUmVmPEhUTUxUZXh0QXJlYUVsZW1lbnQ+KG51bGwpO1xyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBpZiAodGV4dGFyZWFSZWYuY3VycmVudCkge1xyXG4gICAgICBhdXRvc2l6ZSh0ZXh0YXJlYVJlZi5jdXJyZW50KTtcclxuICAgIH1cclxuICB9LCBbdGV4dGFyZWFSZWYuY3VycmVudF0pO1xyXG5cclxuICBjb25zdCBvbktleWRvd25DaGF0ID0gdXNlQ2FsbGJhY2soXHJcbiAgICAoZSkgPT4ge1xyXG4gICAgICBpZiAoZS5rZXkgPT09ICdFbnRlcicpIHtcclxuICAgICAgICBpZiAoIWUuc2hpZnRLZXkpIHtcclxuICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgIG9uU3VibWl0Rm9ybShlKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgICBbY2hhdF0sXHJcbiAgKTtcclxuXHJcbiAgY29uc3QgcmVuZGVyVXNlclN1Z2dlc3Rpb246IChcclxuICAgIHN1Z2dlc3Rpb246IFN1Z2dlc3Rpb25EYXRhSXRlbSxcclxuICAgIHNlYXJjaDogc3RyaW5nLFxyXG4gICAgaGlnaGxpZ2h0ZWREaXNwbGF5OiBSZWFjdC5SZWFjdE5vZGUsXHJcbiAgICBpbmRleDogbnVtYmVyLFxyXG4gICAgZm9jdXNlZDogYm9vbGVhbixcclxuICApID0+IFJlYWN0LlJlYWN0Tm9kZSA9IHVzZUNhbGxiYWNrKFxyXG4gICAgKG1lbWJlciwgc2VhcmNoLCBoaWdobGlnaHRlZERpc3BsYXksIGluZGV4LCBmb2N1cykgPT4ge1xyXG4gICAgICBpZiAoIWRhdGEpIHtcclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gKFxyXG4gICAgICAgIDxFYWNoTWVudGlvbiBmb2N1cz17Zm9jdXN9PlxyXG4gICAgICAgICAgPGltZyBzcmM9e2dyYXZhdGFyLnVybChkYXRhW2luZGV4XS5lbWFpbCwgeyBzOiAnMjBweCcgfSl9IGFsdD17ZGF0YVtpbmRleF0ubmlja25hbWV9IC8+XHJcbiAgICAgICAgICA8c3Bhbj57aGlnaGxpZ2h0ZWREaXNwbGF5fTwvc3Bhbj5cclxuICAgICAgICA8L0VhY2hNZW50aW9uPlxyXG4gICAgICApO1xyXG4gICAgfSxcclxuICAgIFtkYXRhXSxcclxuICApO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPENoYXRBcmVhPlxyXG4gICAgICA8Rm9ybSBvblN1Ym1pdD17b25TdWJtaXRGb3JtfT5cclxuICAgICAgICA8TWVudGlvbnNUZXh0YXJlYVxyXG4gICAgICAgICAgaWQ9XCJlZGl0b3ItY2hhdFwiXHJcbiAgICAgICAgICB2YWx1ZT17Y2hhdH1cclxuICAgICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZUNoYXR9XHJcbiAgICAgICAgICBvbktleVByZXNzPXtvbktleWRvd25DaGF0fVxyXG4gICAgICAgICAgcGxhY2Vob2xkZXI9e3BsYWNlaG9sZGVyfVxyXG4gICAgICAgICAgaW5wdXRSZWY9e3RleHRhcmVhUmVmfVxyXG4gICAgICAgICAgYWxsb3dTdWdnZXN0aW9uc0Fib3ZlQ3Vyc29yXHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPE1lbnRpb25cclxuICAgICAgICAgICAgYXBwZW5kU3BhY2VPbkFkZFxyXG4gICAgICAgICAgICB0cmlnZ2VyPVwiQFwiXHJcbiAgICAgICAgICAgIGRhdGE9e2RhdGE/Lm1hcCgodikgPT4gKHsgaWQ6IHYuaWQsIGRpc3BsYXk6IHYubmlja25hbWUgfSkpIHx8IFtdfVxyXG4gICAgICAgICAgICByZW5kZXJTdWdnZXN0aW9uPXtyZW5kZXJVc2VyU3VnZ2VzdGlvbn1cclxuICAgICAgICAgIC8+XHJcbiAgICAgICAgPC9NZW50aW9uc1RleHRhcmVhPlxyXG4gICAgICAgIDxUb29sYm94PlxyXG4gICAgICAgICAgPFNlbmRCdXR0b25cclxuICAgICAgICAgICAgY2xhc3NOYW1lPXtcclxuICAgICAgICAgICAgICAnYy1idXR0b24tdW5zdHlsZWQgYy1pY29uX2J1dHRvbiBjLWljb25fYnV0dG9uLS1saWdodCBjLWljb25fYnV0dG9uLS1zaXplX21lZGl1bSBjLXRleHR5X2lucHV0X19idXR0b24gYy10ZXh0eV9pbnB1dF9fYnV0dG9uLS1zZW5kJyArXHJcbiAgICAgICAgICAgICAgKGNoYXQ/LnRyaW0oKSA/ICcnIDogJyBjLXRleHR5X2lucHV0X19idXR0b24tLWRpc2FibGVkJylcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBkYXRhLXFhPVwidGV4dHlfc2VuZF9idXR0b25cIlxyXG4gICAgICAgICAgICBhcmlhLWxhYmVsPVwiU2VuZCBtZXNzYWdlXCJcclxuICAgICAgICAgICAgZGF0YS1zaz1cInRvb2x0aXBfcGFyZW50XCJcclxuICAgICAgICAgICAgdHlwZT1cInN1Ym1pdFwiXHJcbiAgICAgICAgICAgIGRpc2FibGVkPXshY2hhdD8udHJpbSgpfVxyXG4gICAgICAgICAgPlxyXG4gICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJjLWljb24gYy1pY29uLS1wYXBlcnBsYW5lLWZpbGxlZFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIC8+XHJcbiAgICAgICAgICA8L1NlbmRCdXR0b24+XHJcbiAgICAgICAgPC9Ub29sYm94PlxyXG4gICAgICA8L0Zvcm0+XHJcbiAgICA8L0NoYXRBcmVhPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDaGF0Qm94O1xyXG4iLCJpbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5cbmV4cG9ydCBjb25zdCBDaGF0V3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIHBhZGRpbmc6IDhweCAyMHB4O1xuXG4gICY6aG92ZXIge1xuICAgIGJhY2tncm91bmQ6ICNlZWU7XG4gIH1cblxuICAmID4gZGl2OmZpcnN0LW9mLXR5cGUge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgd2lkdGg6IDM2cHg7XG4gICAgbWFyZ2luLXJpZ2h0OiA4cHg7XG5cbiAgICAmIGltZyB7XG4gICAgICB3aWR0aDogMzZweDtcbiAgICAgIGhlaWdodDogMzZweDtcbiAgICB9XG4gIH1cblxuICAmID4gZGl2Omxhc3Qtb2YtdHlwZSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4OiAxO1xuICB9XG5cbiAgJiBhIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgY29sb3I6IGRlZXBza3libHVlO1xuICB9XG5gO1xuIiwiaW1wb3J0IHsgQ2hhdFdyYXBwZXIgfSBmcm9tICdAY29tcG9uZW50cy9DaGF0L3N0eWxlcyc7XHJcbmltcG9ydCB7IElDaGF0LCBJRE0sIElVc2VyIH0gZnJvbSAnQHR5cGluZ3MvZGInO1xyXG5pbXBvcnQgZGF5anMgZnJvbSAnZGF5anMnO1xyXG5pbXBvcnQgZ3JhdmF0YXIgZnJvbSAnZ3JhdmF0YXInO1xyXG5pbXBvcnQgUmVhY3QsIHsgRkMsIHVzZU1lbW8sIG1lbW8gfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHVzZVBhcmFtcyB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XHJcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcclxuaW1wb3J0IHJlZ2V4aWZ5U3RyaW5nIGZyb20gJ3JlZ2V4aWZ5LXN0cmluZyc7XHJcblxyXG5pbnRlcmZhY2UgUHJvcHMge1xyXG4gIGRhdGE6IElETSB8IElDaGF0O1xyXG59XHJcblxyXG5jb25zdCBDaGF0OiBGQzxQcm9wcz4gPSBtZW1vKCh7IGRhdGEgfSkgPT4ge1xyXG4gIGNvbnN0IHsgd29ya3NwYWNlIH0gPSB1c2VQYXJhbXM8eyB3b3Jrc3BhY2U6IHN0cmluZzsgY2hhbm5lbDogc3RyaW5nIH0+KCk7XHJcbiAgY29uc3QgdXNlcjogSVVzZXIgPSAnU2VuZGVyJyBpbiBkYXRhID8gZGF0YS5TZW5kZXIgOiBkYXRhLlVzZXI7XHJcblxyXG4gIGNvbnN0IHJlc3VsdCA9IHVzZU1lbW88KHN0cmluZyB8IEpTWC5FbGVtZW50KVtdPihcclxuICAgICgpID0+XHJcbiAgICAgIHJlZ2V4aWZ5U3RyaW5nKHtcclxuICAgICAgICBwYXR0ZXJuOiAvQFxcWyguKz8pXFxdXFwoKFxcZCs/KVxcKXxcXG4vZyxcclxuICAgICAgICBkZWNvcmF0b3IobWF0Y2gsIGluZGV4KSB7XHJcbiAgICAgICAgICBjb25zdCBhcnI6IHN0cmluZ1tdIHwgbnVsbCA9IG1hdGNoLm1hdGNoKC9AXFxbKC4rPylcXF1cXCgoXFxkKz8pXFwpLykhO1xyXG4gICAgICAgICAgaWYgKGFycikge1xyXG4gICAgICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICAgIDxMaW5rIGtleT17bWF0Y2ggKyBpbmRleH0gdG89e2Avd29ya3NwYWNlLyR7d29ya3NwYWNlfS9kbS8ke2FyclsyXX1gfT5cclxuICAgICAgICAgICAgICAgIEB7YXJyWzFdfVxyXG4gICAgICAgICAgICAgIDwvTGluaz5cclxuICAgICAgICAgICAgKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIHJldHVybiA8YnIga2V5PXtpbmRleH0gLz47XHJcbiAgICAgICAgfSxcclxuICAgICAgICBpbnB1dDogZGF0YS5jb250ZW50LFxyXG4gICAgICB9KSxcclxuICAgIFtkYXRhLmNvbnRlbnRdLFxyXG4gICk7XHJcbiAgcmV0dXJuIChcclxuICAgIDxDaGF0V3JhcHBlcj5cclxuICAgICAgPGRpdj5cclxuICAgICAgICA8aW1nIHNyYz17Z3JhdmF0YXIudXJsKHVzZXIuZW1haWwsIHsgczogJzM2cHgnIH0pfSBhbHQ9e3VzZXIubmlja25hbWV9IC8+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgICA8ZGl2IHN0eWxlPXt7IGZsZXhXcmFwOiAnd3JhcCcgfX0+XHJcbiAgICAgICAgPGRpdiBzdHlsZT17eyBkaXNwbGF5OiAnZmxleCcsIGZsZXg6ICcwIDAgMTAwJScsIGFsaWduSXRlbXM6ICdjZW50ZXInIH19PlxyXG4gICAgICAgICAgPGIgc3R5bGU9e3sgbWFyZ2luUmlnaHQ6IDUgfX0+e3VzZXIubmlja25hbWV9PC9iPlxyXG4gICAgICAgICAgPHNwYW4gc3R5bGU9e3sgZm9udFNpemU6IDEyIH19PntkYXlqcyhkYXRhLmNyZWF0ZWRBdCkuZm9ybWF0KCdoOm1tIEEnKX08L3NwYW4+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPHAgc3R5bGU9e3sgZmxleDogJzAgMCAxMDAlJywgbWFyZ2luOiAwIH19PntyZXN1bHR9PC9wPlxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvQ2hhdFdyYXBwZXI+XHJcbiAgKTtcclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDaGF0O1xyXG4iLCJpbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5cbmV4cG9ydCBjb25zdCBDaGF0Wm9uZSA9IHN0eWxlZC5kaXZgXG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4OiAxO1xuYDtcblxuZXhwb3J0IGNvbnN0IFNlY3Rpb24gPSBzdHlsZWQuc2VjdGlvbmBcbiAgbWFyZ2luLXRvcDogMjBweDtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlZWU7XG5gO1xuXG5leHBvcnQgY29uc3QgU3RpY2t5SGVhZGVyID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGZsZXg6IDE7XG4gIHdpZHRoOiAxMDAlO1xuICBwb3NpdGlvbjogc3RpY2t5O1xuICB0b3A6IDE0cHg7XG5cbiAgJiBidXR0b24ge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICBoZWlnaHQ6IDI4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDI3cHg7XG4gICAgcGFkZGluZzogMCAxNnB4O1xuICAgIHotaW5kZXg6IDI7XG4gICAgLS1zYWYtMDogcmdiYSh2YXIoLS1za19mb3JlZ3JvdW5kX2xvdywgMjksIDI4LCAyOSksIDAuMTMpO1xuICAgIGJveC1zaGFkb3c6IDAgMCAwIDFweCB2YXIoLS1zYWYtMCksIDAgMXB4IDNweCAwIHJnYmEoMCwgMCwgMCwgMC4wOCk7XG4gICAgYm9yZGVyLXJhZGl1czogMjRweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiAtMTNweDtcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgfVxuYDtcbiIsImltcG9ydCBDaGF0IGZyb20gJ0Bjb21wb25lbnRzL0NoYXQnO1xuaW1wb3J0IHsgQ2hhdFpvbmUsIFNlY3Rpb24sIFN0aWNreUhlYWRlciB9IGZyb20gJ0Bjb21wb25lbnRzL0NoYXRMaXN0L3N0eWxlcyc7XG5pbXBvcnQgeyBJQ2hhdCwgSURNIH0gZnJvbSAnQHR5cGluZ3MvZGInO1xuaW1wb3J0IFJlYWN0LCB7IEZDLCBSZWZPYmplY3QsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgU2Nyb2xsYmFycyB9IGZyb20gJ3JlYWN0LWN1c3RvbS1zY3JvbGxiYXJzJztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgc2Nyb2xsYmFyUmVmOiBSZWZPYmplY3Q8U2Nyb2xsYmFycz47XG4gIGlzUmVhY2hpbmdFbmQ/OiBib29sZWFuO1xuICBpc0VtcHR5OiBib29sZWFuO1xuICBjaGF0U2VjdGlvbnM6IHsgW2tleTogc3RyaW5nXTogKElETSB8IElDaGF0KVtdIH07XG4gIHNldFNpemU6IChmOiAoc2l6ZTogbnVtYmVyKSA9PiBudW1iZXIpID0+IFByb21pc2U8KElETSB8IElDaGF0KVtdW10gfCB1bmRlZmluZWQ+O1xufVxuY29uc3QgQ2hhdExpc3Q6IEZDPFByb3BzPiA9ICh7IHNjcm9sbGJhclJlZiwgaXNSZWFjaGluZ0VuZCwgaXNFbXB0eSwgY2hhdFNlY3Rpb25zLCBzZXRTaXplIH0pID0+IHtcbiAgY29uc3Qgb25TY3JvbGwgPSB1c2VDYWxsYmFjayhcbiAgICAodmFsdWVzKSA9PiB7XG4gICAgICBpZiAodmFsdWVzLnNjcm9sbFRvcCA9PT0gMCAmJiAhaXNSZWFjaGluZ0VuZCAmJiAhaXNFbXB0eSkge1xuICAgICAgICBzZXRTaXplKChzaXplKSA9PiBzaXplICsgMSkudGhlbigoKSA9PiB7XG4gICAgICAgICAgc2Nyb2xsYmFyUmVmLmN1cnJlbnQ/LnNjcm9sbFRvcChzY3JvbGxiYXJSZWYuY3VycmVudD8uZ2V0U2Nyb2xsSGVpZ2h0KCkgLSB2YWx1ZXMuc2Nyb2xsSGVpZ2h0KTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBbaXNSZWFjaGluZ0VuZCwgaXNFbXB0eV0sXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8Q2hhdFpvbmU+XG4gICAgICA8U2Nyb2xsYmFycyBhdXRvSGlkZSByZWY9e3Njcm9sbGJhclJlZn0gb25TY3JvbGxGcmFtZT17b25TY3JvbGx9PlxuICAgICAgICB7T2JqZWN0LmVudHJpZXMoY2hhdFNlY3Rpb25zKS5tYXAoKFtkYXRlLCBjaGF0c10pID0+IHtcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPFNlY3Rpb24gY2xhc3NOYW1lPXtgc2VjdGlvbi0ke2RhdGV9YH0ga2V5PXtkYXRlfT5cbiAgICAgICAgICAgICAgPFN0aWNreUhlYWRlcj5cbiAgICAgICAgICAgICAgICA8YnV0dG9uPntkYXRlfTwvYnV0dG9uPlxuICAgICAgICAgICAgICA8L1N0aWNreUhlYWRlcj5cbiAgICAgICAgICAgICAge2NoYXRzLm1hcCgoY2hhdCkgPT4gKFxuICAgICAgICAgICAgICAgIDxDaGF0IGtleT17Y2hhdC5pZH0gZGF0YT17Y2hhdH0gLz5cbiAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICA8L1NlY3Rpb24+XG4gICAgICAgICAgKTtcbiAgICAgICAgfSl9XG4gICAgICA8L1Njcm9sbGJhcnM+XG4gICAgPC9DaGF0Wm9uZT5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENoYXRMaXN0O1xuIiwiaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuXG5leHBvcnQgY29uc3QgSGVhZGVyID0gc3R5bGVkLmhlYWRlcmBcbiAgaGVpZ2h0OiA2NHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICB3aWR0aDogMTAwJTtcbiAgLS1zYWYtMDogcmdiYSh2YXIoLS1za19mb3JlZ3JvdW5kX2xvdywgMjksIDI4LCAyOSksIDAuMTMpO1xuICBib3gtc2hhZG93OiAwIDFweCAwIHZhcigtLXNhZi0wKTtcbiAgcGFkZGluZzogMjBweCAxNnB4IDIwcHggMjBweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5gO1xuIiwiaW1wb3J0IHsgSUNoYXQsIElETSB9IGZyb20gJ0B0eXBpbmdzL2RiJztcbmltcG9ydCBkYXlqcyBmcm9tICdkYXlqcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG1ha2VTZWN0aW9uPFQgZXh0ZW5kcyBJRE0gfCBJQ2hhdD4oY2hhdExpc3Q6IFRbXSkge1xuICBjb25zdCBzZWN0aW9uczogeyBba2V5OiBzdHJpbmddOiBUW10gfSA9IHt9O1xuICBjaGF0TGlzdC5mb3JFYWNoKChjaGF0KSA9PiB7XG4gICAgY29uc3QgbW9udGhEYXRlID0gZGF5anMoY2hhdC5jcmVhdGVkQXQpLmZvcm1hdCgnWVlZWS1NTS1ERCcpO1xuICAgIGlmIChBcnJheS5pc0FycmF5KHNlY3Rpb25zW21vbnRoRGF0ZV0pKSB7XG4gICAgICBzZWN0aW9uc1ttb250aERhdGVdLnB1c2goY2hhdCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNlY3Rpb25zW21vbnRoRGF0ZV0gPSBbY2hhdF07XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIHNlY3Rpb25zO1xufVxuIiwiaW1wb3J0IENoYXRCb3ggZnJvbSAnQGNvbXBvbmVudHMvQ2hhdEJveCc7XHJcbmltcG9ydCBDaGF0TGlzdCBmcm9tICdAY29tcG9uZW50cy9DaGF0TGlzdCc7XHJcbmltcG9ydCBNb2RhbCBmcm9tICdAY29tcG9uZW50cy9Nb2RhbCc7XHJcbmltcG9ydCB1c2VJbnB1dCBmcm9tICdAaG9va3MvdXNlSW5wdXQnO1xyXG5pbXBvcnQgdXNlU29ja2V0IGZyb20gJ0Bob29rcy91c2VTb2NrZXQnO1xyXG5pbXBvcnQgeyBIZWFkZXIgfSBmcm9tICdAcGFnZXMvQ2hhbm5lbC9zdHlsZXMnO1xyXG5pbXBvcnQgeyBCdXR0b24sIElucHV0LCBMYWJlbCB9IGZyb20gJ0BwYWdlcy9TaWduVXAvc3R5bGVzJztcclxuaW1wb3J0IHsgSUNoYW5uZWwsIElDaGF0LCBJVXNlciB9IGZyb20gJ0B0eXBpbmdzL2RiJztcclxuaW1wb3J0IGZldGNoZXIgZnJvbSAnQHV0aWxzL2ZldGNoZXInO1xyXG5pbXBvcnQgbWFrZVNlY3Rpb24gZnJvbSAnQHV0aWxzL21ha2VTZWN0aW9uJztcclxuaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJztcclxuaW1wb3J0IFJlYWN0LCB7IHVzZUNhbGxiYWNrLCB1c2VFZmZlY3QsIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IFNjcm9sbGJhcnMgfSBmcm9tICdyZWFjdC1jdXN0b20tc2Nyb2xsYmFycyc7XHJcbmltcG9ydCB7IHVzZVBhcmFtcyB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XHJcbmltcG9ydCB7IFJlZGlyZWN0IH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XHJcbmltcG9ydCB7IHRvYXN0LCBUb2FzdENvbnRhaW5lciB9IGZyb20gJ3JlYWN0LXRvYXN0aWZ5JztcclxuaW1wb3J0IHVzZVNXUiwgeyB1c2VTV1JJbmZpbml0ZSB9IGZyb20gJ3N3cic7XHJcblxyXG5jb25zdCBQQUdFX1NJWkUgPSAyMDtcclxuY29uc3QgQ2hhbm5lbCA9ICgpID0+IHtcclxuICBjb25zdCB7IHdvcmtzcGFjZSwgY2hhbm5lbCB9ID0gdXNlUGFyYW1zPHsgd29ya3NwYWNlOiBzdHJpbmc7IGNoYW5uZWw6IHN0cmluZyB9PigpO1xyXG4gIGNvbnN0IFtzb2NrZXRdID0gdXNlU29ja2V0KHdvcmtzcGFjZSk7XHJcbiAgY29uc3QgeyBkYXRhOiB1c2VyRGF0YSwgcmV2YWxpZGF0ZSB9ID0gdXNlU1dSPElVc2VyPignL2FwaS91c2VyJywgZmV0Y2hlcik7XHJcbiAgY29uc3QgeyBkYXRhOiBjaGFubmVsc0RhdGEgfSA9IHVzZVNXUjxJQ2hhbm5lbFtdPihgL2FwaS93b3Jrc3BhY2UvJHt3b3Jrc3BhY2V9L2NoYW5uZWxzYCwgZmV0Y2hlcik7XHJcbiAgY29uc3QgY2hhbm5lbERhdGEgPSBjaGFubmVsc0RhdGE/LmZpbmQoKHYpID0+IHYubmFtZSA9PT0gY2hhbm5lbCk7XHJcbiAgY29uc3QgeyBkYXRhOiBjaGF0RGF0YSwgcmV2YWxpZGF0ZTogcmV2YWxpZGF0ZUNoYXQsIG11dGF0ZTogbXV0YXRlQ2hhdCwgc2V0U2l6ZSB9ID0gdXNlU1dSSW5maW5pdGU8SUNoYXRbXT4oXHJcbiAgICAoaW5kZXgpID0+IGAvYXBpL3dvcmtzcGFjZS8ke3dvcmtzcGFjZX0vY2hhbm5lbC8ke2NoYW5uZWx9L2NoYXRzP3BlclBhZ2U9JHtQQUdFX1NJWkV9JnBhZ2U9JHtpbmRleCArIDF9YCxcclxuICAgIGZldGNoZXIsXHJcbiAgKTtcclxuICBjb25zdCB7IGRhdGE6IGNoYW5uZWxNZW1iZXJzRGF0YSwgcmV2YWxpZGF0ZTogcmV2YWxpZGF0ZU1lbWJlcnMgfSA9IHVzZVNXUjxJVXNlcltdPihcclxuICAgIHVzZXJEYXRhID8gYC9hcGkvd29ya3NwYWNlLyR7d29ya3NwYWNlfS9jaGFubmVsLyR7Y2hhbm5lbH0vbWVtYmVyc2AgOiBudWxsLFxyXG4gICAgZmV0Y2hlcixcclxuICApO1xyXG4gIGNvbnN0IFtjaGF0LCBvbkNoYW5nZUNoYXQsIHNldENoYXRdID0gdXNlSW5wdXQoJycpO1xyXG4gIGNvbnN0IFtuZXdNZW1iZXIsIG9uQ2hhbmdlTmV3TWVtYmVyLCBzZXROZXdNZW1iZXJdID0gdXNlSW5wdXQoJycpO1xyXG4gIGNvbnN0IFtzaG93SW52aXRlQ2hhbm5lbE1vZGFsLCBzZXRTaG93SW52aXRlQ2hhbm5lbE1vZGFsXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuICBjb25zdCBzY3JvbGxiYXJSZWYgPSB1c2VSZWY8U2Nyb2xsYmFycz4obnVsbCk7XHJcblxyXG4gIGNvbnN0IGlzRW1wdHkgPSBjaGF0RGF0YT8uWzBdPy5sZW5ndGggPT09IDA7XHJcbiAgY29uc3QgaXNSZWFjaGluZ0VuZCA9IGlzRW1wdHkgfHwgKGNoYXREYXRhICYmIGNoYXREYXRhW2NoYXREYXRhLmxlbmd0aCAtIDFdPy5sZW5ndGggPCBQQUdFX1NJWkUpO1xyXG5cclxuICBjb25zdCBvbkludml0ZU1lbWJlciA9IHVzZUNhbGxiYWNrKFxyXG4gICAgKGUpID0+IHtcclxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICBpZiAoIW5ld01lbWJlciB8fCAhbmV3TWVtYmVyLnRyaW0oKSkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICBheGlvc1xyXG4gICAgICAgIC5wb3N0KGAvYXBpL3dvcmtzcGFjZS8ke3dvcmtzcGFjZX0vY2hhbm5lbC8ke2NoYW5uZWx9L21lbWJlcmAsIHtcclxuICAgICAgICAgIGVtYWlsOiBuZXdNZW1iZXIsXHJcbiAgICAgICAgfSlcclxuICAgICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICByZXZhbGlkYXRlTWVtYmVycygpO1xyXG4gICAgICAgICAgc2V0U2hvd0ludml0ZUNoYW5uZWxNb2RhbChmYWxzZSk7XHJcbiAgICAgICAgICBzZXROZXdNZW1iZXIoJycpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xyXG4gICAgICAgICAgY29uc29sZS5kaXIoZXJyb3IpO1xyXG4gICAgICAgICAgdG9hc3QuZXJyb3IoZXJyb3IucmVzcG9uc2U/LmRhdGEsIHsgcG9zaXRpb246ICdib3R0b20tY2VudGVyJyB9KTtcclxuICAgICAgICB9KTtcclxuICAgIH0sXHJcbiAgICBbbmV3TWVtYmVyXSxcclxuICApO1xyXG5cclxuICBjb25zdCBvbkNsb3NlTW9kYWwgPSB1c2VDYWxsYmFjaygoKSA9PiB7XHJcbiAgICBzZXRTaG93SW52aXRlQ2hhbm5lbE1vZGFsKGZhbHNlKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIGNvbnN0IG9uU3VibWl0Rm9ybSA9IHVzZUNhbGxiYWNrKFxyXG4gICAgKGUpID0+IHtcclxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICBpZiAoY2hhdD8udHJpbSgpICYmIGNoYXREYXRhICYmIGNoYW5uZWxEYXRhICYmIHVzZXJEYXRhKSB7XHJcbiAgICAgICAgY29uc3Qgc2F2ZWRDaGF0ID0gY2hhdDtcclxuICAgICAgICBtdXRhdGVDaGF0KChwcmV2Q2hhdERhdGEpID0+IHtcclxuICAgICAgICAgIHByZXZDaGF0RGF0YVswXS51bnNoaWZ0KHtcclxuICAgICAgICAgICAgaWQ6IChjaGF0RGF0YVswXVswXT8uaWQgfHwgMCkgKyAxLFxyXG4gICAgICAgICAgICBjb250ZW50OiBzYXZlZENoYXQsXHJcbiAgICAgICAgICAgIFVzZXJJZDogdXNlckRhdGEuaWQsXHJcbiAgICAgICAgICAgIFVzZXI6IHVzZXJEYXRhLFxyXG4gICAgICAgICAgICBjcmVhdGVkQXQ6IG5ldyBEYXRlKCksXHJcbiAgICAgICAgICAgIENoYW5uZWxJZDogY2hhbm5lbERhdGEuaWQsXHJcbiAgICAgICAgICAgIENoYW5uZWw6IGNoYW5uZWxEYXRhLFxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgICByZXR1cm4gcHJldkNoYXREYXRhO1xyXG4gICAgICAgIH0sIGZhbHNlKS50aGVuKCgpID0+IHtcclxuICAgICAgICAgIHNldENoYXQoJycpO1xyXG4gICAgICAgICAgaWYgKHNjcm9sbGJhclJlZi5jdXJyZW50KSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdzY3JvbGxUb0JvdHRvbSEnKTtcclxuICAgICAgICAgICAgc2Nyb2xsYmFyUmVmLmN1cnJlbnQuc2Nyb2xsVG9Cb3R0b20oKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICBheGlvc1xyXG4gICAgICAgICAgLnBvc3QoYC9hcGkvd29ya3NwYWNlLyR7d29ya3NwYWNlfS9jaGFubmVsLyR7Y2hhbm5lbH0vY2hhdGAsIHtcclxuICAgICAgICAgICAgY29udGVudDogc2F2ZWRDaGF0LFxyXG4gICAgICAgICAgfSlcclxuICAgICAgICAgIC5jYXRjaChjb25zb2xlLmVycm9yKTtcclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIFtjaGF0LCB3b3Jrc3BhY2UsIGNoYW5uZWwsIGNoYW5uZWxEYXRhLCBzY3JvbGxiYXJSZWYuY3VycmVudCwgdXNlckRhdGEsIGNoYXREYXRhXSxcclxuICApO1xyXG5cclxuICBjb25zdCBvbk1lc3NhZ2UgPSAoZGF0YTogSUNoYXQpID0+IHtcclxuICAgIGlmIChkYXRhLkNoYW5uZWwubmFtZSA9PT0gY2hhbm5lbCAmJiBkYXRhLlVzZXJJZCAhPT0gdXNlckRhdGE/LmlkKSB7XHJcbiAgICAgIG11dGF0ZUNoYXQoKGNoYXREYXRhKSA9PiB7XHJcbiAgICAgICAgY2hhdERhdGFbMF0udW5zaGlmdChkYXRhKTtcclxuICAgICAgICByZXR1cm4gY2hhdERhdGE7XHJcbiAgICAgIH0sIGZhbHNlKS50aGVuKCgpID0+IHtcclxuICAgICAgICBpZiAoc2Nyb2xsYmFyUmVmLmN1cnJlbnQpIHtcclxuICAgICAgICAgIGlmIChcclxuICAgICAgICAgICAgc2Nyb2xsYmFyUmVmLmN1cnJlbnQuZ2V0U2Nyb2xsSGVpZ2h0KCkgPFxyXG4gICAgICAgICAgICBzY3JvbGxiYXJSZWYuY3VycmVudC5nZXRDbGllbnRIZWlnaHQoKSArIHNjcm9sbGJhclJlZi5jdXJyZW50LmdldFNjcm9sbFRvcCgpICsgMTUwXHJcbiAgICAgICAgICApIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ3Njcm9sbFRvQm90dG9tIScpO1xyXG4gICAgICAgICAgICBzY3JvbGxiYXJSZWYuY3VycmVudC5zY3JvbGxUb0JvdHRvbSgpO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdG9hc3Quc3VjY2Vzcygn7IOIIOuplOyLnOyngOqwgCDrj4TssKntlojsirXri4jri6QuJywge1xyXG4gICAgICAgICAgICAgIG9uQ2xpY2soKSB7XHJcbiAgICAgICAgICAgICAgICBzY3JvbGxiYXJSZWYuY3VycmVudD8uc2Nyb2xsVG9Cb3R0b20oKTtcclxuICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgIGNsb3NlT25DbGljazogdHJ1ZSxcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgc29ja2V0Py5vbignbWVzc2FnZScsIG9uTWVzc2FnZSk7XHJcbiAgICByZXR1cm4gKCkgPT4ge1xyXG4gICAgICBzb2NrZXQ/Lm9mZignbWVzc2FnZScsIG9uTWVzc2FnZSk7XHJcbiAgICB9O1xyXG4gIH0sIFtzY3JvbGxiYXJSZWYuY3VycmVudCwgc29ja2V0LCB1c2VyRGF0YV0pO1xyXG5cclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgaWYgKGNoYXREYXRhPy5sZW5ndGggPT09IDEpIHtcclxuICAgICAgY29uc29sZS5sb2coJ3RvQm90dG9tJywgY2hhdERhdGEpO1xyXG4gICAgICBzY3JvbGxiYXJSZWYuY3VycmVudD8uc2Nyb2xsVG9Cb3R0b20oKTtcclxuICAgIH1cclxuICB9LCBbY2hhdERhdGEsIHNjcm9sbGJhclJlZi5jdXJyZW50XSk7XHJcblxyXG4gIGNvbnN0IG9uQ2xpY2tJbnZpdGVDaGFubmVsID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xyXG4gICAgc2V0U2hvd0ludml0ZUNoYW5uZWxNb2RhbCh0cnVlKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIGlmIChjaGFubmVsc0RhdGEgJiYgIWNoYW5uZWxEYXRhKSB7XHJcbiAgICByZXR1cm4gPFJlZGlyZWN0IHRvPXtgL3dvcmtzcGFjZS8ke3dvcmtzcGFjZX0vY2hhbm5lbC/snbzrsJhgfSAvPjtcclxuICB9XHJcblxyXG4gIGNvbnN0IGNoYXRTZWN0aW9ucyA9IG1ha2VTZWN0aW9uKGNoYXREYXRhID8gKFtdIGFzIElDaGF0W10pLmNvbmNhdCguLi5jaGF0RGF0YSkucmV2ZXJzZSgpIDogW10pO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPGRpdiBzdHlsZT17eyBkaXNwbGF5OiAnZmxleCcsIGZsZXhXcmFwOiAnd3JhcCcsIGhlaWdodDogJ2NhbGMoMTAwdmggLSAzOHB4KScsIGZsZXhGbG93OiAnY29sdW1uJyB9fT5cclxuICAgICAgPEhlYWRlcj5cclxuICAgICAgICA8c3Bhbj4je2NoYW5uZWx9PC9zcGFuPlxyXG4gICAgICAgIDxkaXYgc3R5bGU9e3sgZGlzcGxheTogJ2ZsZXgnLCBmbGV4OiAxLCBqdXN0aWZ5Q29udGVudDogJ2ZsZXgtZW5kJywgYWxpZ25JdGVtczogJ2NlbnRlcicgfX0+XHJcbiAgICAgICAgICA8c3Bhbj57Y2hhbm5lbE1lbWJlcnNEYXRhPy5sZW5ndGh9PC9zcGFuPlxyXG4gICAgICAgICAgPGJ1dHRvblxyXG4gICAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrSW52aXRlQ2hhbm5lbH1cclxuICAgICAgICAgICAgY2xhc3NOYW1lPVwiYy1idXR0b24tdW5zdHlsZWQgcC1pYV9fdmlld19oZWFkZXJfX2J1dHRvblwiXHJcbiAgICAgICAgICAgIGFyaWEtbGFiZWw9XCJBZGQgcGVvcGxlIHRvICNyZWFjdC1uYXRpdmVcIlxyXG4gICAgICAgICAgICBkYXRhLXNrPVwidG9vbHRpcF9wYXJlbnRcIlxyXG4gICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiYy1pY29uIHAtaWFfX3ZpZXdfaGVhZGVyX19idXR0b25faWNvbiBjLWljb24tLWFkZC11c2VyXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgLz5cclxuICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0hlYWRlcj5cclxuICAgICAgPENoYXRMaXN0XHJcbiAgICAgICAgc2Nyb2xsYmFyUmVmPXtzY3JvbGxiYXJSZWZ9XHJcbiAgICAgICAgaXNSZWFjaGluZ0VuZD17aXNSZWFjaGluZ0VuZH1cclxuICAgICAgICBpc0VtcHR5PXtpc0VtcHR5fVxyXG4gICAgICAgIGNoYXRTZWN0aW9ucz17Y2hhdFNlY3Rpb25zfVxyXG4gICAgICAgIHNldFNpemU9e3NldFNpemV9XHJcbiAgICAgIC8+XHJcbiAgICAgIDxDaGF0Qm94XHJcbiAgICAgICAgb25TdWJtaXRGb3JtPXtvblN1Ym1pdEZvcm19XHJcbiAgICAgICAgY2hhdD17Y2hhdH1cclxuICAgICAgICBvbkNoYW5nZUNoYXQ9e29uQ2hhbmdlQ2hhdH1cclxuICAgICAgICBwbGFjZWhvbGRlcj17YE1lc3NhZ2UgIyR7Y2hhbm5lbH1gfVxyXG4gICAgICAgIGRhdGE9e2NoYW5uZWxNZW1iZXJzRGF0YX1cclxuICAgICAgLz5cclxuICAgICAgPE1vZGFsIHNob3c9e3Nob3dJbnZpdGVDaGFubmVsTW9kYWx9IG9uQ2xvc2VNb2RhbD17b25DbG9zZU1vZGFsfT5cclxuICAgICAgICA8Zm9ybSBvblN1Ym1pdD17b25JbnZpdGVNZW1iZXJ9PlxyXG4gICAgICAgICAgPExhYmVsIGlkPVwibWVtYmVyLWxhYmVsXCI+XHJcbiAgICAgICAgICAgIDxzcGFuPuyxhOuEkCDrqaTrsoQg7LSI64yAPC9zcGFuPlxyXG4gICAgICAgICAgICA8SW5wdXQgaWQ9XCJtZW1iZXJcIiB2YWx1ZT17bmV3TWVtYmVyfSBvbkNoYW5nZT17b25DaGFuZ2VOZXdNZW1iZXJ9IC8+XHJcbiAgICAgICAgICA8L0xhYmVsPlxyXG4gICAgICAgICAgPEJ1dHRvbiB0eXBlPVwic3VibWl0XCI+7IOd7ISx7ZWY6riwPC9CdXR0b24+XHJcbiAgICAgICAgPC9mb3JtPlxyXG4gICAgICA8L01vZGFsPlxyXG4gICAgICA8VG9hc3RDb250YWluZXIgcG9zaXRpb249XCJib3R0b20tY2VudGVyXCIgLz5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDaGFubmVsO1xyXG4iLCJpbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5cbmV4cG9ydCBjb25zdCBIZWFkZXIgPSBzdHlsZWQuaGVhZGVyYFxuICBoZWlnaHQ6IDY0cHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHdpZHRoOiAxMDAlO1xuICAtLXNhZi0wOiByZ2JhKHZhcigtLXNrX2ZvcmVncm91bmRfbG93LCAyOSwgMjgsIDI5KSwgMC4xMyk7XG4gIGJveC1zaGFkb3c6IDAgMXB4IDAgdmFyKC0tc2FmLTApO1xuICBwYWRkaW5nOiAyMHB4IDE2cHggMjBweCAyMHB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAmIGltZyB7XG4gICAgbWFyZ2luLXJpZ2h0OiA1cHg7XG4gIH1cbmA7XG4iLCJpbXBvcnQgQ2hhdEJveCBmcm9tICdAY29tcG9uZW50cy9DaGF0Qm94JztcclxuaW1wb3J0IENoYXRMaXN0IGZyb20gJ0Bjb21wb25lbnRzL0NoYXRMaXN0JztcclxuaW1wb3J0IHVzZUlucHV0IGZyb20gJ0Bob29rcy91c2VJbnB1dCc7XHJcbmltcG9ydCB1c2VTb2NrZXQgZnJvbSAnQGhvb2tzL3VzZVNvY2tldCc7XHJcbmltcG9ydCB7IEhlYWRlciB9IGZyb20gJ0BwYWdlcy9EaXJlY3RNZXNzYWdlL3N0eWxlcyc7XHJcbmltcG9ydCB7IElETSB9IGZyb20gJ0B0eXBpbmdzL2RiJztcclxuaW1wb3J0IGZldGNoZXIgZnJvbSAnQHV0aWxzL2ZldGNoZXInO1xyXG5pbXBvcnQgbWFrZVNlY3Rpb24gZnJvbSAnQHV0aWxzL21ha2VTZWN0aW9uJztcclxuaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJztcclxuaW1wb3J0IGdyYXZhdGFyIGZyb20gJ2dyYXZhdGFyJztcclxuaW1wb3J0IFJlYWN0LCB7IHVzZUNhbGxiYWNrLCB1c2VFZmZlY3QsIHVzZVJlZiB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgU2Nyb2xsYmFycyB9IGZyb20gJ3JlYWN0LWN1c3RvbS1zY3JvbGxiYXJzJztcclxuaW1wb3J0IHsgdXNlUGFyYW1zIH0gZnJvbSAncmVhY3Qtcm91dGVyJztcclxuaW1wb3J0IHsgdG9hc3QgfSBmcm9tICdyZWFjdC10b2FzdGlmeSc7XHJcbmltcG9ydCB1c2VTV1IsIHsgdXNlU1dSSW5maW5pdGUgfSBmcm9tICdzd3InO1xyXG5cclxuY29uc3QgUEFHRV9TSVpFID0gMjA7XHJcbmNvbnN0IERpcmVjdE1lc3NhZ2UgPSAoKSA9PiB7XHJcbiAgY29uc3QgeyB3b3Jrc3BhY2UsIGlkIH0gPSB1c2VQYXJhbXM8eyB3b3Jrc3BhY2U6IHN0cmluZzsgaWQ6IHN0cmluZyB9PigpO1xyXG4gIGNvbnN0IFtzb2NrZXRdID0gdXNlU29ja2V0KHdvcmtzcGFjZSk7XHJcbiAgY29uc3QgeyBkYXRhOiBteURhdGEgfSA9IHVzZVNXUignL2FwaS91c2VyJywgZmV0Y2hlcik7XHJcbiAgY29uc3QgeyBkYXRhOiB1c2VyRGF0YSB9ID0gdXNlU1dSKGAvYXBpL3dvcmtzcGFjZS8ke3dvcmtzcGFjZX0vdXNlci8ke2lkfWAsIGZldGNoZXIpO1xyXG4gIGNvbnN0IHsgZGF0YTogY2hhdERhdGEsIHJldmFsaWRhdGU6IHJldmFsaWRhdGVDaGF0LCBtdXRhdGU6IG11dGF0ZUNoYXQsIHNldFNpemUgfSA9IHVzZVNXUkluZmluaXRlPElETVtdPihcclxuICAgIChpbmRleCkgPT4gYC9hcGkvd29ya3NwYWNlLyR7d29ya3NwYWNlfS9kbS8ke2lkfS9jaGF0cz9wZXJQYWdlPSR7UEFHRV9TSVpFfSZwYWdlPSR7aW5kZXggKyAxfWAsXHJcbiAgICBmZXRjaGVyLFxyXG4gICk7XHJcbiAgY29uc3QgW2NoYXQsIG9uQ2hhbmdlQ2hhdCwgc2V0Q2hhdF0gPSB1c2VJbnB1dCgnJyk7XHJcbiAgY29uc3Qgc2Nyb2xsYmFyUmVmID0gdXNlUmVmPFNjcm9sbGJhcnM+KG51bGwpO1xyXG5cclxuICBjb25zdCBpc0VtcHR5ID0gY2hhdERhdGE/LlswXT8ubGVuZ3RoID09PSAwO1xyXG4gIGNvbnN0IGlzUmVhY2hpbmdFbmQgPSBpc0VtcHR5IHx8IChjaGF0RGF0YSAmJiBjaGF0RGF0YVtjaGF0RGF0YS5sZW5ndGggLSAxXT8ubGVuZ3RoIDwgUEFHRV9TSVpFKTtcclxuXHJcbiAgY29uc3Qgb25TdWJtaXRGb3JtID0gdXNlQ2FsbGJhY2soXHJcbiAgICAoZSkgPT4ge1xyXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIGlmIChjaGF0Py50cmltKCkgJiYgY2hhdERhdGEpIHtcclxuICAgICAgICBjb25zdCBzYXZlZENoYXQgPSBjaGF0O1xyXG4gICAgICAgIG11dGF0ZUNoYXQoKHByZXZDaGF0RGF0YSkgPT4ge1xyXG4gICAgICAgICAgcHJldkNoYXREYXRhWzBdLnVuc2hpZnQoe1xyXG4gICAgICAgICAgICBpZDogKGNoYXREYXRhWzBdWzBdPy5pZCB8fCAwKSArIDEsXHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IHNhdmVkQ2hhdCxcclxuICAgICAgICAgICAgU2VuZGVySWQ6IG15RGF0YS5pZCxcclxuICAgICAgICAgICAgU2VuZGVyOiBteURhdGEsXHJcbiAgICAgICAgICAgIFJlY2VpdmVySWQ6IHVzZXJEYXRhLmlkLFxyXG4gICAgICAgICAgICBSZWNlaXZlcjogdXNlckRhdGEsXHJcbiAgICAgICAgICAgIGNyZWF0ZWRBdDogbmV3IERhdGUoKSxcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgcmV0dXJuIHByZXZDaGF0RGF0YTtcclxuICAgICAgICB9LCBmYWxzZSkudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICBzZXRDaGF0KCcnKTtcclxuICAgICAgICAgIGlmIChzY3JvbGxiYXJSZWYuY3VycmVudCkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnc2Nyb2xsVG9Cb3R0b20hJyk7XHJcbiAgICAgICAgICAgIHNjcm9sbGJhclJlZi5jdXJyZW50LnNjcm9sbFRvQm90dG9tKCk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgYXhpb3NcclxuICAgICAgICAgIC5wb3N0KGAvYXBpL3dvcmtzcGFjZS8ke3dvcmtzcGFjZX0vZG0vJHtpZH0vY2hhdGAsIHtcclxuICAgICAgICAgICAgY29udGVudDogY2hhdCxcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgICAuY2F0Y2goY29uc29sZS5lcnJvcik7XHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgICBbY2hhdCwgd29ya3NwYWNlLCBpZCwgc2Nyb2xsYmFyUmVmLmN1cnJlbnQsIHVzZXJEYXRhLCBjaGF0RGF0YV0sXHJcbiAgKTtcclxuXHJcbiAgY29uc3Qgb25NZXNzYWdlID1cclxuICAgIChkYXRhOiBJRE0pID0+IHtcclxuICAgICAgaWYgKGRhdGEuU2VuZGVySWQgPT09IE51bWJlcihpZCkgJiYgbXlEYXRhLmlkICE9PSBOdW1iZXIoaWQpKSB7XHJcbiAgICAgICAgbXV0YXRlQ2hhdCgoY2hhdERhdGEpID0+IHtcclxuICAgICAgICAgIGNoYXREYXRhWzBdLnVuc2hpZnQoZGF0YSk7XHJcbiAgICAgICAgICByZXR1cm4gY2hhdERhdGE7XHJcbiAgICAgICAgfSwgZmFsc2UpLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgaWYgKHNjcm9sbGJhclJlZi5jdXJyZW50KSB7XHJcbiAgICAgICAgICAgIGlmIChcclxuICAgICAgICAgICAgICBzY3JvbGxiYXJSZWYuY3VycmVudC5nZXRTY3JvbGxIZWlnaHQoKSA8XHJcbiAgICAgICAgICAgICAgc2Nyb2xsYmFyUmVmLmN1cnJlbnQuZ2V0Q2xpZW50SGVpZ2h0KCkgKyBzY3JvbGxiYXJSZWYuY3VycmVudC5nZXRTY3JvbGxUb3AoKSArIDE1MFxyXG4gICAgICAgICAgICApIHtcclxuICAgICAgICAgICAgICBjb25zb2xlLmxvZygnc2Nyb2xsVG9Cb3R0b20hJyk7XHJcbiAgICAgICAgICAgICAgc2Nyb2xsYmFyUmVmLmN1cnJlbnQuc2Nyb2xsVG9Cb3R0b20oKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICB0b2FzdC5zdWNjZXNzKCfsg4gg66mU7Iuc7KeA6rCAIOuPhOywqe2WiOyKteuLiOuLpC4nLCB7XHJcbiAgICAgICAgICAgICAgICBvbkNsaWNrKCkge1xyXG4gICAgICAgICAgICAgICAgICBzY3JvbGxiYXJSZWYuY3VycmVudD8uc2Nyb2xsVG9Cb3R0b20oKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBjbG9zZU9uQ2xpY2s6IHRydWUsXHJcbiAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHNvY2tldD8ub24oJ2RtJywgb25NZXNzYWdlKTtcclxuICAgIHJldHVybiAoKSA9PiB7XHJcbiAgICAgIHNvY2tldD8ub2ZmKCdkbScsIG9uTWVzc2FnZSk7XHJcbiAgICB9O1xyXG4gIH0sIFtzY3JvbGxiYXJSZWYuY3VycmVudCwgc29ja2V0LCBpZF0pO1xyXG5cclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgaWYgKGNoYXREYXRhPy5sZW5ndGggPT09IDEpIHtcclxuICAgICAgY29uc29sZS5sb2coJ3RvQm90dG9tJywgY2hhdERhdGEpO1xyXG4gICAgICBzY3JvbGxiYXJSZWYuY3VycmVudD8uc2Nyb2xsVG9Cb3R0b20oKTtcclxuICAgIH1cclxuICB9LCBbY2hhdERhdGEsIHNjcm9sbGJhclJlZi5jdXJyZW50XSk7XHJcblxyXG4gIGlmICghdXNlckRhdGEgfHwgIW15RGF0YSkge1xyXG4gICAgcmV0dXJuIG51bGw7XHJcbiAgfVxyXG5cclxuICBjb25zdCBjaGF0U2VjdGlvbnMgPSBtYWtlU2VjdGlvbihjaGF0RGF0YSA/IChbXSBhcyBJRE1bXSkuY29uY2F0KC4uLmNoYXREYXRhKS5yZXZlcnNlKCkgOiBbXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IHN0eWxlPXt7IGRpc3BsYXk6ICdmbGV4JywgZmxleFdyYXA6ICd3cmFwJywgaGVpZ2h0OiAnY2FsYygxMDB2aCAtIDM4cHgpJywgZmxleEZsb3c6ICdjb2x1bW4nIH19PlxyXG4gICAgICA8SGVhZGVyPlxyXG4gICAgICAgIDxpbWcgc3JjPXtncmF2YXRhci51cmwodXNlckRhdGEuZW1haWwsIHsgczogJzI0cHgnIH0pfSBhbHQ9e3VzZXJEYXRhLm5pY2tuYW1lfSAvPlxyXG4gICAgICAgIDxzcGFuPnt1c2VyRGF0YS5uaWNrbmFtZX08L3NwYW4+XHJcbiAgICAgIDwvSGVhZGVyPlxyXG4gICAgICA8Q2hhdExpc3RcclxuICAgICAgICBzY3JvbGxiYXJSZWY9e3Njcm9sbGJhclJlZn1cclxuICAgICAgICBpc1JlYWNoaW5nRW5kPXtpc1JlYWNoaW5nRW5kfVxyXG4gICAgICAgIGlzRW1wdHk9e2lzRW1wdHl9XHJcbiAgICAgICAgY2hhdFNlY3Rpb25zPXtjaGF0U2VjdGlvbnN9XHJcbiAgICAgICAgc2V0U2l6ZT17c2V0U2l6ZX1cclxuICAgICAgLz5cclxuICAgICAgPENoYXRCb3hcclxuICAgICAgICBvblN1Ym1pdEZvcm09e29uU3VibWl0Rm9ybX1cclxuICAgICAgICBjaGF0PXtjaGF0fVxyXG4gICAgICAgIG9uQ2hhbmdlQ2hhdD17b25DaGFuZ2VDaGF0fVxyXG4gICAgICAgIHBsYWNlaG9sZGVyPXtgTWVzc2FnZSAke3VzZXJEYXRhLm5pY2tuYW1lfWB9XHJcbiAgICAgICAgZGF0YT17W119XHJcbiAgICAgIC8+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgRGlyZWN0TWVzc2FnZTtcclxuIiwiaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xyXG5cclxuZXhwb3J0IGNvbnN0IFJpZ2h0TWVudSA9IHN0eWxlZC5kaXZgXHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IEhlYWRlciA9IHN0eWxlZC5oZWFkZXJgXHJcbiAgaGVpZ2h0OiAzOHB4O1xyXG4gIGJhY2tncm91bmQ6ICMzNTBkMzY7XHJcbiAgY29sb3I6ICNmZmZmZmY7XHJcbiAgYm94LXNoYWRvdzogMCAxcHggMCAwIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTtcclxuICBwYWRkaW5nOiA1cHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IFByb2ZpbGVJbWcgPSBzdHlsZWQuaW1nYFxyXG4gIHdpZHRoOiAyOHB4O1xyXG4gIGhlaWdodDogMjhweDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiA1cHg7XHJcbiAgcmlnaHQ6IDE2cHg7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgUHJvZmlsZU1vZGFsID0gc3R5bGVkLmRpdmBcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcblxyXG4gICYgaW1nIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgfVxyXG5cclxuICAmID4gZGl2IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbiAgfVxyXG5cclxuICAmICNwcm9maWxlLW5hbWUge1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcclxuICB9XHJcblxyXG4gICYgI3Byb2ZpbGUtYWN0aXZlIHtcclxuICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBMb2dPdXRCdXR0b24gPSBzdHlsZWQuYnV0dG9uYFxyXG4gIGJvcmRlcjogbm9uZTtcclxuICB3aWR0aDogMTAwJTtcclxuICBib3JkZXItdG9wOiAxcHggc29saWQgcmdiKDI5LCAyOCwgMjkpO1xyXG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIGhlaWdodDogMzNweDtcclxuICBwYWRkaW5nOiA1cHggMjBweCA1cHg7XHJcbiAgb3V0bGluZTogbm9uZTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgV29ya3NwYWNlV3JhcHBlciA9IHN0eWxlZC5kaXZgXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4OiAxO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IFdvcmtzcGFjZXMgPSBzdHlsZWQuZGl2YFxyXG4gIHdpZHRoOiA2NXB4O1xyXG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kOiAjM2YwZTQwO1xyXG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCByZ2IoODIsIDM4LCA4Myk7XHJcbiAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgcmdiKDgyLCAzOCwgODMpO1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHBhZGRpbmc6IDE1cHggMCAwO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IENoYW5uZWxzID0gc3R5bGVkLm5hdmBcclxuICB3aWR0aDogMjYwcHg7XHJcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBiYWNrZ3JvdW5kOiAjM2YwZTQwO1xyXG4gIGNvbG9yOiByZ2IoMTg4LCAxNzEsIDE4OCk7XHJcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuXHJcbiAgJiBhIHtcclxuICAgIHBhZGRpbmctbGVmdDogMzZweDtcclxuICAgIGNvbG9yOiBpbmhlcml0O1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgaGVpZ2h0OiAyOHB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDI4cHg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHJcbiAgICAmLnNlbGVjdGVkIHtcclxuICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJiAuYm9sZCB7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICB9XHJcblxyXG4gICYgLmNvdW50IHtcclxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgYmFja2dyb3VuZDogI2NkMjU1MztcclxuICAgIGJvcmRlci1yYWRpdXM6IDE2cHg7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgaGVpZ2h0OiAxOHB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDE4cHg7XHJcbiAgICBwYWRkaW5nOiAwIDlweDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIG1hcmdpbi1yaWdodDogMTZweDtcclxuICB9XHJcblxyXG4gICYgaDIge1xyXG4gICAgaGVpZ2h0OiAzNnB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDM2cHg7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgZm9udC1zaXplOiAxNXB4O1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBXb3Jrc3BhY2VOYW1lID0gc3R5bGVkLmJ1dHRvbmBcclxuICBoZWlnaHQ6IDY0cHg7XHJcbiAgbGluZS1oZWlnaHQ6IDY0cHg7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHJnYig4MiwgMzgsIDgzKTtcclxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiKDgyLCAzOCwgODMpO1xyXG4gIGZvbnQtd2VpZ2h0OiA5MDA7XHJcbiAgZm9udC1zaXplOiAyNHB4O1xyXG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICBwYWRkaW5nOiAwO1xyXG4gIHBhZGRpbmctbGVmdDogMTZweDtcclxuICBtYXJnaW46IDA7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBNZW51U2Nyb2xsID0gc3R5bGVkLmRpdmBcclxuICBoZWlnaHQ6IGNhbGMoMTAwdmggLSAxMDJweCk7XHJcbiAgb3ZlcmZsb3cteTogYXV0bztcclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBXb3Jrc3BhY2VNb2RhbCA9IHN0eWxlZC5kaXZgXHJcbiAgcGFkZGluZzogMTBweCAwIDA7XHJcblxyXG4gICYgaDIge1xyXG4gICAgcGFkZGluZy1sZWZ0OiAyMHB4O1xyXG4gIH1cclxuXHJcbiAgJiA+IGJ1dHRvbiB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMjhweDtcclxuICAgIHBhZGRpbmc6IDRweDtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHJnYigyOCwgMjksIDI4KTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuXHJcbiAgICAmOmxhc3Qtb2YtdHlwZSB7XHJcbiAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2IoMjgsIDI5LCAyOCk7XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IENoYXRzID0gc3R5bGVkLmRpdmBcclxuICBmbGV4OiAxO1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IEFkZEJ1dHRvbiA9IHN0eWxlZC5idXR0b25gXHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIGZvbnQtc2l6ZTogMjRweDtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgd2lkdGg6IDQwcHg7XHJcbiAgaGVpZ2h0OiA0MHB4O1xyXG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgV29ya3NwYWNlQnV0dG9uID0gc3R5bGVkLmJ1dHRvbmBcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgd2lkdGg6IDQwcHg7XHJcbiAgaGVpZ2h0OiA0MHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgYm9yZGVyOiAzcHggc29saWQgIzNmMGU0MDtcclxuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gIGZvbnQtc2l6ZTogMThweDtcclxuICBmb250LXdlaWdodDogNzAwO1xyXG4gIGNvbG9yOiBibGFjaztcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbmA7XHJcbiIsImltcG9ydCBDaGFubmVsTGlzdCBmcm9tICdAY29tcG9uZW50cy9DaGFubmVsTGlzdCc7XHJcbmltcG9ydCBETUxpc3QgZnJvbSAnQGNvbXBvbmVudHMvRE1MaXN0JztcclxuaW1wb3J0IE1lbnUgZnJvbSAnQGNvbXBvbmVudHMvTWVudSc7XHJcbmltcG9ydCBNb2RhbCBmcm9tICdAY29tcG9uZW50cy9Nb2RhbCc7XHJcbmltcG9ydCB1c2VJbnB1dCBmcm9tICdAaG9va3MvdXNlSW5wdXQnO1xyXG5pbXBvcnQgdXNlU29ja2V0IGZyb20gJ0Bob29rcy91c2VTb2NrZXQnO1xyXG5pbXBvcnQgQ2hhbm5lbCBmcm9tICdAcGFnZXMvQ2hhbm5lbCc7XHJcbmltcG9ydCBEaXJlY3RNZXNzYWdlIGZyb20gJ0BwYWdlcy9EaXJlY3RNZXNzYWdlJztcclxuaW1wb3J0IHsgQnV0dG9uLCBJbnB1dCwgTGFiZWwgfSBmcm9tICdAcGFnZXMvU2lnblVwL3N0eWxlcyc7XHJcbmltcG9ydCB7IElDaGFubmVsLCBJVXNlciB9IGZyb20gJ0B0eXBpbmdzL2RiJztcclxuaW1wb3J0IGZldGNoZXIgZnJvbSAnQHV0aWxzL2ZldGNoZXInO1xyXG5pbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnO1xyXG5pbXBvcnQgZ3JhdmF0YXIgZnJvbSAnZ3JhdmF0YXInO1xyXG5pbXBvcnQgUmVhY3QsIHsgdXNlQ2FsbGJhY2ssIHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHVzZUhpc3RvcnksIHVzZUxvY2F0aW9uLCB1c2VQYXJhbXMsIHVzZVJvdXRlTWF0Y2ggfSBmcm9tICdyZWFjdC1yb3V0ZXInO1xyXG5pbXBvcnQgeyBMaW5rLCBSZWRpcmVjdCwgUm91dGUsIFN3aXRjaCB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xyXG5pbXBvcnQgeyB0b2FzdCwgVG9hc3RDb250YWluZXIgfSBmcm9tICdyZWFjdC10b2FzdGlmeSc7XHJcbmltcG9ydCAncmVhY3QtdG9hc3RpZnkvZGlzdC9SZWFjdFRvYXN0aWZ5LmNzcyc7XHJcbmltcG9ydCB1c2VTV1IgZnJvbSAnc3dyJztcclxuXHJcbmltcG9ydCB7XHJcbiAgQWRkQnV0dG9uLFxyXG4gIENoYW5uZWxzLFxyXG4gIENoYXRzLFxyXG4gIEhlYWRlcixcclxuICBMb2dPdXRCdXR0b24sXHJcbiAgTWVudVNjcm9sbCxcclxuICBQcm9maWxlSW1nLFxyXG4gIFByb2ZpbGVNb2RhbCxcclxuICBSaWdodE1lbnUsXHJcbiAgV29ya3NwYWNlQnV0dG9uLFxyXG4gIFdvcmtzcGFjZU1vZGFsLFxyXG4gIFdvcmtzcGFjZU5hbWUsXHJcbiAgV29ya3NwYWNlcyxcclxuICBXb3Jrc3BhY2VXcmFwcGVyLFxyXG59IGZyb20gJy4vc3R5bGVzJztcclxuXHJcbmNvbnN0IFdvcmtzcGFjZSA9ICgpID0+IHtcclxuICBjb25zdCBwYXJhbXMgPSB1c2VQYXJhbXM8eyB3b3Jrc3BhY2U/OiBzdHJpbmcgfT4oKTtcclxuICBjb25zdCBsb2NhdGlvbiA9IHVzZUxvY2F0aW9uKCk7XHJcbiAgY29uc3Qgcm91dGVNYXRjaCA9IHVzZVJvdXRlTWF0Y2goKTtcclxuICBjb25zdCBoaXN0b3J5ID0gdXNlSGlzdG9yeSgpO1xyXG4gIC8vIGNvbnNvbGUubG9nKCdwYXJhbXMnLCBwYXJhbXMsICdsb2NhdGlvbicsIGxvY2F0aW9uLCAncm91dGVNYXRjaCcsIHJvdXRlTWF0Y2gsICdoaXN0b3J5JywgaGlzdG9yeSk7XHJcbiAgY29uc3QgeyB3b3Jrc3BhY2UgfSA9IHBhcmFtcztcclxuICBjb25zdCBbc29ja2V0LCBkaXNjb25uZWN0U29ja2V0XSA9IHVzZVNvY2tldCh3b3Jrc3BhY2UpO1xyXG4gIGNvbnN0IHsgZGF0YTogdXNlckRhdGEsIHJldmFsaWRhdGU6IHJldmFsaWRhdGVVc2VyIH0gPSB1c2VTV1I8SVVzZXIgfCBmYWxzZT4oJy9hcGkvdXNlcicsIGZldGNoZXIpO1xyXG4gIGNvbnN0IHsgZGF0YTogY2hhbm5lbERhdGEsIHJldmFsaWRhdGU6IHJldmFsaWRhdGVDaGFubmVsIH0gPSB1c2VTV1I8SUNoYW5uZWxbXT4oXHJcbiAgICB1c2VyRGF0YSA/IGAvYXBpL3dvcmtzcGFjZS8ke3dvcmtzcGFjZX0vY2hhbm5lbHNgIDogbnVsbCxcclxuICAgIGZldGNoZXIsXHJcbiAgKTtcclxuICBjb25zb2xlLmxvZygncmVyZW5kZXInLCAndXNlckRhdGEnLCB1c2VyRGF0YSwgJ2NoYW5uZWxEYXRhJywgY2hhbm5lbERhdGEpO1xyXG4gIGNvbnN0IFtzaG93Q3JlYXRlV29ya3NwYWNlTW9kYWwsIHNldFNob3dDcmVhdGVXb3Jrc3BhY2VNb2RhbF0gPSB1c2VTdGF0ZShmYWxzZSk7XHJcbiAgY29uc3QgW3Nob3dJbnZpdGVXb3Jrc3BhY2VNb2RhbCwgc2V0U2hvd0ludml0ZVdvcmtzcGFjZU1vZGFsXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuICBjb25zdCBbc2hvd0NyZWF0ZUNoYW5uZWxNb2RhbCwgc2V0U2hvd0NyZWF0ZUNoYW5uZWxNb2RhbF0gPSB1c2VTdGF0ZShmYWxzZSk7XHJcbiAgY29uc3QgW3Nob3dVc2VyTWVudSwgc2V0U2hvd1VzZXJNZW51XSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuICBjb25zdCBbc2hvd1dvcmtzcGFjZU1vZGFsLCBzZXRTaG93V29ya3NwYWNlTW9kYWxdID0gdXNlU3RhdGUoZmFsc2UpO1xyXG4gIGNvbnN0IFtuZXdXb3Jrc3BhY2UsIG9uQ2hhbmdlTmV3V29ya3NwYWNlLCBzZXROZXdXb3Jrc3BhY2VdID0gdXNlSW5wdXQoJycpO1xyXG4gIGNvbnN0IFtuZXdVcmwsIG9uQ2hhbmdlTmV3VXJsLCBzZXROZXdVcmxdID0gdXNlSW5wdXQoJycpO1xyXG4gIGNvbnN0IFtuZXdDaGFubmVsLCBvbkNoYW5nZU5ld0NoYW5uZWwsIHNldE5ld0NoYW5uZWxdID0gdXNlSW5wdXQoJycpO1xyXG4gIGNvbnN0IFtuZXdNZW1iZXIsIG9uQ2hhbmdlTmV3TWVtYmVyLCBzZXROZXdNZW1iZXJdID0gdXNlSW5wdXQoJycpO1xyXG5cclxuICBjb25zdCBvbkxvZ091dCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcclxuICAgIGF4aW9zXHJcbiAgICAgIC5wb3N0KCcvYXBpL2xvZ291dCcpXHJcbiAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICByZXZhbGlkYXRlVXNlcigpO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5kaXIoZXJyb3IpO1xyXG4gICAgICAgIHRvYXN0LmVycm9yKGVycm9yLnJlc3BvbnNlPy5kYXRhLCB7IHBvc2l0aW9uOiAnYm90dG9tLWNlbnRlcicgfSk7XHJcbiAgICAgIH0pO1xyXG4gIH0sIFtdKTtcclxuXHJcbiAgY29uc3Qgb25DcmVhdGVXb3Jrc3BhY2UgPSB1c2VDYWxsYmFjayhcclxuICAgIChlKSA9PiB7XHJcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgaWYgKCFuZXdXb3Jrc3BhY2UgfHwgIW5ld1dvcmtzcGFjZS50cmltKCkpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgICAgaWYgKCFuZXdVcmwgfHwgIW5ld1VybC50cmltKCkpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgICAgYXhpb3NcclxuICAgICAgICAucG9zdCgnL2FwaS93b3Jrc3BhY2UnLCB7XHJcbiAgICAgICAgICB3b3Jrc3BhY2U6IG5ld1dvcmtzcGFjZSxcclxuICAgICAgICAgIHVybDogbmV3VXJsLFxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgcmV2YWxpZGF0ZVVzZXIoKTtcclxuICAgICAgICAgIHNldFNob3dDcmVhdGVXb3Jrc3BhY2VNb2RhbChmYWxzZSk7XHJcbiAgICAgICAgICBzZXROZXdXb3Jrc3BhY2UoJycpO1xyXG4gICAgICAgICAgc2V0TmV3VXJsKCcnKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcclxuICAgICAgICAgIGNvbnNvbGUuZGlyKGVycm9yKTtcclxuICAgICAgICAgIHRvYXN0LmVycm9yKGVycm9yLnJlc3BvbnNlPy5kYXRhLCB7IHBvc2l0aW9uOiAnYm90dG9tLWNlbnRlcicgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG4gICAgW25ld1dvcmtzcGFjZSwgbmV3VXJsXSxcclxuICApO1xyXG4gIGNvbnN0IG9uQ3JlYXRlQ2hhbm5lbCA9IHVzZUNhbGxiYWNrKFxyXG4gICAgKGUpID0+IHtcclxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICBpZiAoIW5ld0NoYW5uZWwgfHwgIW5ld0NoYW5uZWwudHJpbSgpKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICAgIGF4aW9zXHJcbiAgICAgICAgLnBvc3QoYC9hcGkvd29ya3NwYWNlLyR7d29ya3NwYWNlfS9jaGFubmVsYCwge1xyXG4gICAgICAgICAgbmFtZTogbmV3Q2hhbm5lbCxcclxuICAgICAgICB9KVxyXG4gICAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICAgIHJldmFsaWRhdGVDaGFubmVsKCk7XHJcbiAgICAgICAgICBzZXRTaG93Q3JlYXRlQ2hhbm5lbE1vZGFsKGZhbHNlKTtcclxuICAgICAgICAgIHNldE5ld0NoYW5uZWwoJycpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xyXG4gICAgICAgICAgY29uc29sZS5kaXIoZXJyb3IpO1xyXG4gICAgICAgICAgdG9hc3QuZXJyb3IoZXJyb3IucmVzcG9uc2U/LmRhdGEsIHsgcG9zaXRpb246ICdib3R0b20tY2VudGVyJyB9KTtcclxuICAgICAgICB9KTtcclxuICAgIH0sXHJcbiAgICBbbmV3Q2hhbm5lbF0sXHJcbiAgKTtcclxuICBjb25zdCBvbkludml0ZU1lbWJlciA9IHVzZUNhbGxiYWNrKFxyXG4gICAgKGUpID0+IHtcclxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICBpZiAoIW5ld01lbWJlciB8fCAhbmV3TWVtYmVyLnRyaW0oKSkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICBheGlvc1xyXG4gICAgICAgIC5wb3N0KGAvYXBpL3dvcmtzcGFjZS8ke3dvcmtzcGFjZX0vbWVtYmVyYCwge1xyXG4gICAgICAgICAgZW1haWw6IG5ld01lbWJlcixcclxuICAgICAgICB9KVxyXG4gICAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICAgIHJldmFsaWRhdGVDaGFubmVsKCk7XHJcbiAgICAgICAgICBzZXRTaG93SW52aXRlV29ya3NwYWNlTW9kYWwoZmFsc2UpO1xyXG4gICAgICAgICAgc2V0TmV3TWVtYmVyKCcnKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcclxuICAgICAgICAgIGNvbnNvbGUuZGlyKGVycm9yKTtcclxuICAgICAgICAgIHRvYXN0LmVycm9yKGVycm9yLnJlc3BvbnNlPy5kYXRhLCB7IHBvc2l0aW9uOiAnYm90dG9tLWNlbnRlcicgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG4gICAgW25ld01lbWJlcl0sXHJcbiAgKTtcclxuXHJcbiAgY29uc3Qgb25DbGlja0NyZWF0ZVdvcmtzcGFjZSA9IHVzZUNhbGxiYWNrKCgpID0+IHtcclxuICAgIHNldFNob3dDcmVhdGVXb3Jrc3BhY2VNb2RhbCh0cnVlKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIGNvbnN0IG9uQ2xpY2tBZGRDaGFubmVsID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xyXG4gICAgc2V0U2hvd0NyZWF0ZUNoYW5uZWxNb2RhbCh0cnVlKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIGNvbnN0IG9uQ2xpY2tJbnZpdGVXb3Jrc3BhY2UgPSB1c2VDYWxsYmFjaygoKSA9PiB7XHJcbiAgICBzZXRTaG93SW52aXRlV29ya3NwYWNlTW9kYWwodHJ1ZSk7XHJcbiAgfSwgW10pO1xyXG5cclxuICBjb25zdCBvbkNsb3NlTW9kYWwgPSB1c2VDYWxsYmFjaygoKSA9PiB7XHJcbiAgICBzZXRTaG93Q3JlYXRlV29ya3NwYWNlTW9kYWwoZmFsc2UpO1xyXG4gICAgc2V0U2hvd0NyZWF0ZUNoYW5uZWxNb2RhbChmYWxzZSk7XHJcbiAgICBzZXRTaG93SW52aXRlV29ya3NwYWNlTW9kYWwoZmFsc2UpO1xyXG4gIH0sIFtdKTtcclxuXHJcbiAgY29uc3Qgb25DbGlja1VzZXJQcm9maWxlID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xyXG4gICAgc2V0U2hvd1VzZXJNZW51KChwcmV2KSA9PiAhcHJldik7XHJcbiAgfSwgW10pO1xyXG5cclxuICBjb25zdCB0b2dnbGVXb3Jrc3BhY2VNb2RhbCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcclxuICAgIHNldFNob3dXb3Jrc3BhY2VNb2RhbCgocHJldikgPT4gIXByZXYpO1xyXG4gIH0sIFtdKTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHJldHVybiAoKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUuaW5mbygnZGlzY29ubmVjdCBzb2NrZXQnLCB3b3Jrc3BhY2UpO1xyXG4gICAgICBkaXNjb25uZWN0U29ja2V0KCk7XHJcbiAgICB9O1xyXG4gIH0sIFt3b3Jrc3BhY2VdKTtcclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgaWYgKGNoYW5uZWxEYXRhICYmIHVzZXJEYXRhKSB7XHJcbiAgICAgIGNvbnNvbGUuaW5mbygn66Gc6re47J247ZWY7J6QJyk7XHJcbiAgICAgIHNvY2tldD8uZW1pdCgnbG9naW4nLCB7IGlkOiB1c2VyRGF0YT8uaWQsIGNoYW5uZWxzOiBjaGFubmVsRGF0YS5tYXAoKHYpID0+IHYuaWQpIH0pO1xyXG4gICAgfVxyXG4gIH0sIFt1c2VyRGF0YSwgY2hhbm5lbERhdGFdKTtcclxuXHJcbiAgaWYgKHVzZXJEYXRhID09PSBmYWxzZSkge1xyXG4gICAgcmV0dXJuIDxSZWRpcmVjdCB0bz1cIi9sb2dpblwiIC8+O1xyXG4gIH1cclxuICBpZiAodXNlckRhdGEgJiYgIXVzZXJEYXRhLldvcmtzcGFjZXMuZmluZCgodikgPT4gdi51cmwgPT09IHdvcmtzcGFjZSkpIHtcclxuICAgIHJldHVybiA8UmVkaXJlY3QgdG89XCIvd29ya3NwYWNlL3NsZWFjdC9jaGFubmVsL+ydvOuwmFwiIC8+O1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXY+XHJcbiAgICAgIDxIZWFkZXI+XHJcbiAgICAgICAge3VzZXJEYXRhICYmIChcclxuICAgICAgICAgIDxSaWdodE1lbnU+XHJcbiAgICAgICAgICAgIDxzcGFuIG9uQ2xpY2s9e29uQ2xpY2tVc2VyUHJvZmlsZX0+XHJcbiAgICAgICAgICAgICAgPFByb2ZpbGVJbWcgc3JjPXtncmF2YXRhci51cmwodXNlckRhdGEuZW1haWwsIHsgczogJzI4cHgnIH0pfSBhbHQ9e3VzZXJEYXRhLm5pY2tuYW1lfSAvPlxyXG4gICAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgICAgIHtzaG93VXNlck1lbnUgJiYgKFxyXG4gICAgICAgICAgICAgIDxNZW51IHN0eWxlPXt7IHJpZ2h0OiAwLCB0b3A6IDM4IH19IHNob3c9e3Nob3dVc2VyTWVudX0gb25DbG9zZU1vZGFsPXtvbkNsaWNrVXNlclByb2ZpbGV9PlxyXG4gICAgICAgICAgICAgICAgPFByb2ZpbGVNb2RhbD5cclxuICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e2dyYXZhdGFyLnVybCh1c2VyRGF0YS5lbWFpbCwgeyBzOiAnMzZweCcgfSl9IGFsdD17dXNlckRhdGEubmlja25hbWV9IC8+XHJcbiAgICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9XCJwcm9maWxlLW5hbWVcIj57dXNlckRhdGEubmlja25hbWV9PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPVwicHJvZmlsZS1hY3RpdmVcIj5BY3RpdmU8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9Qcm9maWxlTW9kYWw+XHJcbiAgICAgICAgICAgICAgICA8TG9nT3V0QnV0dG9uIG9uQ2xpY2s9e29uTG9nT3V0fT7roZzqt7jslYTsm4M8L0xvZ091dEJ1dHRvbj5cclxuICAgICAgICAgICAgICA8L01lbnU+XHJcbiAgICAgICAgICAgICl9XHJcbiAgICAgICAgICA8L1JpZ2h0TWVudT5cclxuICAgICAgICApfVxyXG4gICAgICA8L0hlYWRlcj5cclxuICAgICAgPFdvcmtzcGFjZVdyYXBwZXI+XHJcbiAgICAgICAgPFdvcmtzcGFjZXM+XHJcbiAgICAgICAgICB7dXNlckRhdGE/LldvcmtzcGFjZXMubWFwKCh3cykgPT4ge1xyXG4gICAgICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICAgIDxMaW5rIGtleT17d3MuaWR9IHRvPXtgL3dvcmtzcGFjZS8ke3dzLnVybH0vY2hhbm5lbC/snbzrsJhgfT5cclxuICAgICAgICAgICAgICAgIDxXb3Jrc3BhY2VCdXR0b24+e3dzLm5hbWUuc2xpY2UoMCwgMSkudG9VcHBlckNhc2UoKX08L1dvcmtzcGFjZUJ1dHRvbj5cclxuICAgICAgICAgICAgICA8L0xpbms+XHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgICB9KX1cclxuICAgICAgICAgIDxBZGRCdXR0b24gb25DbGljaz17b25DbGlja0NyZWF0ZVdvcmtzcGFjZX0+KzwvQWRkQnV0dG9uPlxyXG4gICAgICAgIDwvV29ya3NwYWNlcz5cclxuICAgICAgICA8Q2hhbm5lbHM+XHJcbiAgICAgICAgICA8V29ya3NwYWNlTmFtZSBvbkNsaWNrPXt0b2dnbGVXb3Jrc3BhY2VNb2RhbH0+XHJcbiAgICAgICAgICAgIHt1c2VyRGF0YT8uV29ya3NwYWNlcy5maW5kKCh2KSA9PiB2LnVybCA9PT0gd29ya3NwYWNlKT8ubmFtZX1cclxuICAgICAgICAgIDwvV29ya3NwYWNlTmFtZT5cclxuICAgICAgICAgIDxNZW51U2Nyb2xsPlxyXG4gICAgICAgICAgICA8TWVudSBzaG93PXtzaG93V29ya3NwYWNlTW9kYWx9IG9uQ2xvc2VNb2RhbD17dG9nZ2xlV29ya3NwYWNlTW9kYWx9IHN0eWxlPXt7IHRvcDogOTUsIGxlZnQ6IDgwIH19PlxyXG4gICAgICAgICAgICAgIDxXb3Jrc3BhY2VNb2RhbD5cclxuICAgICAgICAgICAgICAgIDxoMj57dXNlckRhdGE/LldvcmtzcGFjZXMuZmluZCgodikgPT4gdi51cmwgPT09IHdvcmtzcGFjZSk/Lm5hbWV9PC9oMj5cclxuICAgICAgICAgICAgICAgIDxidXR0b24gb25DbGljaz17b25DbGlja0ludml0ZVdvcmtzcGFjZX0+7JuM7YGs7Iqk7Y6Y7J207Iqk7JeQIOyCrOyaqeyekCDstIjrjIA8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgIDxidXR0b24gb25DbGljaz17b25DbGlja0FkZENoYW5uZWx9PuyxhOuEkCDrp4zrk6TquLA8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgIDxidXR0b24gb25DbGljaz17b25Mb2dPdXR9PuuhnOq3uOyVhOybgzwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgIDwvV29ya3NwYWNlTW9kYWw+XHJcbiAgICAgICAgICAgIDwvTWVudT5cclxuICAgICAgICAgICAgPENoYW5uZWxMaXN0IHVzZXJEYXRhPXt1c2VyRGF0YX0gY2hhbm5lbERhdGE9e2NoYW5uZWxEYXRhfSAvPlxyXG4gICAgICAgICAgICA8RE1MaXN0IHVzZXJEYXRhPXt1c2VyRGF0YX0gLz5cclxuICAgICAgICAgIDwvTWVudVNjcm9sbD5cclxuICAgICAgICA8L0NoYW5uZWxzPlxyXG4gICAgICAgIDxDaGF0cz5cclxuICAgICAgICAgIDxTd2l0Y2g+XHJcbiAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL3dvcmtzcGFjZS86d29ya3NwYWNlL2NoYW5uZWwvOmNoYW5uZWxcIiBjb21wb25lbnQ9e0NoYW5uZWx9IC8+XHJcbiAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL3dvcmtzcGFjZS86d29ya3NwYWNlL2RtLzppZFwiIGNvbXBvbmVudD17RGlyZWN0TWVzc2FnZX0gLz5cclxuICAgICAgICAgIDwvU3dpdGNoPlxyXG4gICAgICAgIDwvQ2hhdHM+XHJcbiAgICAgIDwvV29ya3NwYWNlV3JhcHBlcj5cclxuICAgICAgPE1vZGFsIHNob3c9e3Nob3dDcmVhdGVXb3Jrc3BhY2VNb2RhbH0gb25DbG9zZU1vZGFsPXtvbkNsb3NlTW9kYWx9PlxyXG4gICAgICAgIDxmb3JtIG9uU3VibWl0PXtvbkNyZWF0ZVdvcmtzcGFjZX0+XHJcbiAgICAgICAgICA8TGFiZWwgaWQ9XCJ3b3Jrc3BhY2UtbGFiZWxcIj5cclxuICAgICAgICAgICAgPHNwYW4+7JuM7YGs7Iqk7Y6Y7J207IqkIOydtOumhDwvc3Bhbj5cclxuICAgICAgICAgICAgPElucHV0IGlkPVwid29ya3NwYWNlXCIgdmFsdWU9e25ld1dvcmtzcGFjZX0gb25DaGFuZ2U9e29uQ2hhbmdlTmV3V29ya3NwYWNlfSAvPlxyXG4gICAgICAgICAgPC9MYWJlbD5cclxuICAgICAgICAgIDxMYWJlbCBpZD1cIndvcmtzcGFjZS11cmwtbGFiZWxcIj5cclxuICAgICAgICAgICAgPHNwYW4+7JuM7YGs7Iqk7Y6Y7J207IqkIHVybDwvc3Bhbj5cclxuICAgICAgICAgICAgPElucHV0IGlkPVwid29ya3NwYWNlLXVybFwiIHZhbHVlPXtuZXdVcmx9IG9uQ2hhbmdlPXtvbkNoYW5nZU5ld1VybH0gLz5cclxuICAgICAgICAgIDwvTGFiZWw+XHJcbiAgICAgICAgICA8QnV0dG9uIHR5cGU9XCJzdWJtaXRcIj7sg53shLHtlZjquLA8L0J1dHRvbj5cclxuICAgICAgICA8L2Zvcm0+XHJcbiAgICAgIDwvTW9kYWw+XHJcbiAgICAgIDxNb2RhbCBzaG93PXtzaG93Q3JlYXRlQ2hhbm5lbE1vZGFsfSBvbkNsb3NlTW9kYWw9e29uQ2xvc2VNb2RhbH0+XHJcbiAgICAgICAgPGZvcm0gb25TdWJtaXQ9e29uQ3JlYXRlQ2hhbm5lbH0+XHJcbiAgICAgICAgICA8TGFiZWwgaWQ9XCJjaGFubmVsLWxhYmVsXCI+XHJcbiAgICAgICAgICAgIDxzcGFuPuyxhOuEkCDsnbTrpoQ8L3NwYW4+XHJcbiAgICAgICAgICAgIDxJbnB1dCBpZD1cImNoYW5uZWxcIiB2YWx1ZT17bmV3Q2hhbm5lbH0gb25DaGFuZ2U9e29uQ2hhbmdlTmV3Q2hhbm5lbH0gLz5cclxuICAgICAgICAgIDwvTGFiZWw+XHJcbiAgICAgICAgICA8QnV0dG9uPuyDneyEse2VmOq4sDwvQnV0dG9uPlxyXG4gICAgICAgIDwvZm9ybT5cclxuICAgICAgPC9Nb2RhbD5cclxuICAgICAgPE1vZGFsIHNob3c9e3Nob3dJbnZpdGVXb3Jrc3BhY2VNb2RhbH0gb25DbG9zZU1vZGFsPXtvbkNsb3NlTW9kYWx9PlxyXG4gICAgICAgIDxmb3JtIG9uU3VibWl0PXtvbkludml0ZU1lbWJlcn0+XHJcbiAgICAgICAgICA8TGFiZWwgaWQ9XCJtZW1iZXItbGFiZWxcIj5cclxuICAgICAgICAgICAgPHNwYW4+7J2066mU7J28PC9zcGFuPlxyXG4gICAgICAgICAgICA8SW5wdXQgaWQ9XCJtZW1iZXJcIiB0eXBlPVwiZW1haWxcIiB2YWx1ZT17bmV3TWVtYmVyfSBvbkNoYW5nZT17b25DaGFuZ2VOZXdNZW1iZXJ9IC8+XHJcbiAgICAgICAgICA8L0xhYmVsPlxyXG4gICAgICAgICAgPEJ1dHRvbiB0eXBlPVwic3VibWl0XCI+7LSI64yA7ZWY6riwPC9CdXR0b24+XHJcbiAgICAgICAgPC9mb3JtPlxyXG4gICAgICA8L01vZGFsPlxyXG4gICAgICA8VG9hc3RDb250YWluZXIgcG9zaXRpb249XCJib3R0b20tY2VudGVyXCIgLz5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBXb3Jrc3BhY2U7XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=